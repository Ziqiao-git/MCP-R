{
  "qualifiedName": "@boezzz/ridewithgps-mcp",
  "displayName": "RideWithGPS MCP Server",
  "description": "Provide seamless access to your RideWithGPS cycling data including routes, trips, events, and user profile through an AI-powered interface. Manage and retrieve detailed cycling adventure information effortlessly. Synchronize your cycling data and stay updated with your activities and events.\n\nYou can get your RideWithGPS API credentials from:\n- API Key: Visit the developer settings page in your RideWithGPS account and create an API client\n- Authentication Token: Select the API Client you created and go to its edit page. Click on 'Create new Auth Token' to obtain a new authentication token.\n\nOAuth coming soon.",
  "iconUrl": "https://icons.duckduckgo.com/ip3/ridewithgps.com.ico",
  "remote": false,
  "deploymentUrl": null,
  "security": null,
  "tools": [
    {
      "name": "get_routes",
      "title": "Get RideWithGPS Routes",
      "description": "Retrieve a list of cycling routes owned by the user, ordered by updated_at descending",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "page": {
            "type": "number",
            "minimum": 1,
            "description": "Page number for pagination (starts at 1, optional)"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "get_route_details",
      "title": "Get Route Details",
      "description": "Retrieve full details for a specific cycling route including track points, course points, and points of interest",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "number",
            "minimum": 1,
            "description": "The unique ID of the route to retrieve"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "get_trips",
      "title": "Get RideWithGPS Trips",
      "description": "Retrieve a list of user's historical cycling trips, ordered by updated_at descending",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "page": {
            "type": "number",
            "minimum": 1,
            "description": "Page number for pagination (starts at 1, optional)"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "get_trip_details",
      "title": "Get Trip Details",
      "description": "Retrieve full details for a specific cycling trip including track points and performance data",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "number",
            "minimum": 1,
            "description": "The unique ID of the trip to retrieve"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "get_current_user",
      "title": "Get RideWithGPS User",
      "description": "Retrieve profile information for the user",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {},
        "additionalProperties": false
      }
    },
    {
      "name": "get_events",
      "title": "Get RideWithGPS Events",
      "description": "Retrieve a list of events owned by the user, ordered by created_at descending",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "page": {
            "type": "number",
            "minimum": 1,
            "description": "Page number for pagination (starts at 1, optional)"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "get_event_details",
      "title": "Get Event Details",
      "description": "Retrieve full details for a specific event including associated routes",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "number",
            "minimum": 1,
            "description": "The unique ID of the event to retrieve"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "sync_user_data",
      "title": "Sync User Data",
      "description": "Retrieve items (routes and/or trips) that the user has interacted with since a given datetime.",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "since"
        ],
        "properties": {
          "since": {
            "type": "string",
            "description": "ISO8601 formatted datetime (e.g., '2024-01-01T00:00:00Z') to get changes since"
          },
          "assets": {
            "type": "string",
            "description": "Comma-separated list of asset types to return: 'routes', 'trips', or 'routes,trips' (optional, defaults to API client setting)"
          }
        },
        "additionalProperties": false
      }
    }
  ],
  "connections": [
    {
      "type": "stdio",
      "bundleUrl": "https://backend.smithery.ai/storage/v1/object/public/bundles/@boezzz/ridewithgps-mcp/server.mcpb",
      "runtime": "node",
      "configSchema": {
        "type": "object",
        "required": [
          "apiKey",
          "authToken"
        ],
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "RideWithGPS API Key"
          },
          "authToken": {
            "type": "string",
            "description": "RideWithGPS Auth Token"
          }
        }
      }
    }
  ]
}