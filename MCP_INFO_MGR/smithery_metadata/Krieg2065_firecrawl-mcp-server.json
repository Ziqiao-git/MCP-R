{
  "qualifiedName": "@Krieg2065/firecrawl-mcp-server",
  "displayName": "Firecrawl Web Scraping Server",
  "description": "Enable advanced web scraping, crawling, and content extraction with support for JavaScript rendering, batch processing, and smart filtering. Perform deep research and structured data extraction using LLM-powered tools. Monitor credit usage and handle rate limits automatically for efficient and reliable web data integration.",
  "iconUrl": "https://icons.duckduckgo.com/ip3/firecrawl.dev.ico",
  "remote": false,
  "deploymentUrl": null,
  "security": {
    "scanPassed": true
  },
  "tools": [
    {
      "name": "firecrawl_scrape",
      "description": "Scrape a single webpage with advanced options for content extraction. Supports various formats including markdown, HTML, and screenshots. Can execute custom actions like clicking or scrolling before scraping.",
      "inputSchema": {
        "type": "object",
        "required": [
          "url"
        ],
        "properties": {
          "url": {
            "type": "string",
            "description": "The URL to scrape"
          },
          "mobile": {
            "type": "boolean",
            "description": "Use mobile viewport"
          },
          "actions": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Key to press (for press action)"
                },
                "text": {
                  "type": "string",
                  "description": "Text to write (for write action)"
                },
                "type": {
                  "enum": [
                    "wait",
                    "click",
                    "screenshot",
                    "write",
                    "press",
                    "scroll",
                    "scrape",
                    "executeJavascript"
                  ],
                  "type": "string",
                  "description": "Type of action to perform"
                },
                "script": {
                  "type": "string",
                  "description": "JavaScript code to execute"
                },
                "fullPage": {
                  "type": "boolean",
                  "description": "Take full page screenshot"
                },
                "selector": {
                  "type": "string",
                  "description": "CSS selector for the target element"
                },
                "direction": {
                  "enum": [
                    "up",
                    "down"
                  ],
                  "type": "string",
                  "description": "Scroll direction"
                },
                "milliseconds": {
                  "type": "number",
                  "description": "Time to wait in milliseconds (for wait action)"
                }
              }
            },
            "description": "List of actions to perform before scraping"
          },
          "extract": {
            "type": "object",
            "properties": {
              "prompt": {
                "type": "string",
                "description": "User prompt for LLM extraction"
              },
              "schema": {
                "type": "object",
                "description": "Schema for structured data extraction"
              },
              "systemPrompt": {
                "type": "string",
                "description": "System prompt for LLM extraction"
              }
            },
            "description": "Configuration for structured data extraction"
          },
          "formats": {
            "type": "array",
            "items": {
              "enum": [
                "markdown",
                "html",
                "rawHtml",
                "screenshot",
                "links",
                "screenshot@fullPage",
                "extract"
              ],
              "type": "string"
            },
            "default": [
              "markdown"
            ],
            "description": "Content formats to extract (default: ['markdown'])"
          },
          "timeout": {
            "type": "number",
            "description": "Maximum time in milliseconds to wait for the page to load"
          },
          "waitFor": {
            "type": "number",
            "description": "Time in milliseconds to wait for dynamic content to load"
          },
          "location": {
            "type": "object",
            "properties": {
              "country": {
                "type": "string",
                "description": "Country code for geolocation"
              },
              "languages": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Language codes for content"
              }
            },
            "description": "Location settings for scraping"
          },
          "excludeTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "HTML tags to exclude from extraction"
          },
          "includeTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "HTML tags to specifically include in extraction"
          },
          "onlyMainContent": {
            "type": "boolean",
            "description": "Extract only the main content, filtering out navigation, footers, etc."
          },
          "removeBase64Images": {
            "type": "boolean",
            "description": "Remove base64 encoded images from output"
          },
          "skipTlsVerification": {
            "type": "boolean",
            "description": "Skip TLS certificate verification"
          }
        }
      }
    },
    {
      "name": "firecrawl_map",
      "description": "Discover URLs from a starting point. Can use both sitemap.xml and HTML link discovery.",
      "inputSchema": {
        "type": "object",
        "required": [
          "url"
        ],
        "properties": {
          "url": {
            "type": "string",
            "description": "Starting URL for URL discovery"
          },
          "limit": {
            "type": "number",
            "description": "Maximum number of URLs to return"
          },
          "search": {
            "type": "string",
            "description": "Optional search term to filter URLs"
          },
          "sitemapOnly": {
            "type": "boolean",
            "description": "Only use sitemap.xml for discovery, ignore HTML links"
          },
          "ignoreSitemap": {
            "type": "boolean",
            "description": "Skip sitemap.xml discovery and only use HTML links"
          },
          "includeSubdomains": {
            "type": "boolean",
            "description": "Include URLs from subdomains in results"
          }
        }
      }
    },
    {
      "name": "firecrawl_crawl",
      "description": "Start an asynchronous crawl of multiple pages from a starting URL. Supports depth control, path filtering, and webhook notifications.",
      "inputSchema": {
        "type": "object",
        "required": [
          "url"
        ],
        "properties": {
          "url": {
            "type": "string",
            "description": "Starting URL for the crawl"
          },
          "limit": {
            "type": "number",
            "description": "Maximum number of pages to crawl"
          },
          "webhook": {
            "oneOf": [
              {
                "type": "string",
                "description": "Webhook URL to notify when crawl is complete"
              },
              {
                "type": "object",
                "required": [
                  "url"
                ],
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "Webhook URL"
                  },
                  "headers": {
                    "type": "object",
                    "description": "Custom headers for webhook requests"
                  }
                }
              }
            ]
          },
          "maxDepth": {
            "type": "number",
            "description": "Maximum link depth to crawl"
          },
          "excludePaths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "URL paths to exclude from crawling"
          },
          "includePaths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Only crawl these URL paths"
          },
          "ignoreSitemap": {
            "type": "boolean",
            "description": "Skip sitemap.xml discovery"
          },
          "scrapeOptions": {
            "type": "object",
            "properties": {
              "formats": {
                "type": "array",
                "items": {
                  "enum": [
                    "markdown",
                    "html",
                    "rawHtml",
                    "screenshot",
                    "links",
                    "screenshot@fullPage",
                    "extract"
                  ],
                  "type": "string"
                }
              },
              "waitFor": {
                "type": "number"
              },
              "excludeTags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "includeTags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "onlyMainContent": {
                "type": "boolean"
              }
            },
            "description": "Options for scraping each page"
          },
          "allowBackwardLinks": {
            "type": "boolean",
            "description": "Allow crawling links that point to parent directories"
          },
          "allowExternalLinks": {
            "type": "boolean",
            "description": "Allow crawling links to external domains"
          },
          "ignoreQueryParameters": {
            "type": "boolean",
            "description": "Ignore query parameters when comparing URLs"
          },
          "deduplicateSimilarURLs": {
            "type": "boolean",
            "description": "Remove similar URLs during crawl"
          }
        }
      }
    },
    {
      "name": "firecrawl_batch_scrape",
      "description": "Scrape multiple URLs in batch mode. Returns a job ID that can be used to check status.",
      "inputSchema": {
        "type": "object",
        "required": [
          "urls"
        ],
        "properties": {
          "urls": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of URLs to scrape"
          },
          "options": {
            "type": "object",
            "properties": {
              "formats": {
                "type": "array",
                "items": {
                  "enum": [
                    "markdown",
                    "html",
                    "rawHtml",
                    "screenshot",
                    "links",
                    "screenshot@fullPage",
                    "extract"
                  ],
                  "type": "string"
                }
              },
              "waitFor": {
                "type": "number"
              },
              "excludeTags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "includeTags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "onlyMainContent": {
                "type": "boolean"
              }
            }
          }
        }
      }
    },
    {
      "name": "firecrawl_check_batch_status",
      "description": "Check the status of a batch scraping job.",
      "inputSchema": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Batch job ID to check"
          }
        }
      }
    },
    {
      "name": "firecrawl_check_crawl_status",
      "description": "Check the status of a crawl job.",
      "inputSchema": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Crawl job ID to check"
          }
        }
      }
    },
    {
      "name": "firecrawl_search",
      "description": "Search and retrieve content from web pages with optional scraping. Returns SERP results by default (url, title, description) or full page content when scrapeOptions are provided.",
      "inputSchema": {
        "type": "object",
        "required": [
          "query"
        ],
        "properties": {
          "tbs": {
            "type": "string",
            "description": "Time-based search filter"
          },
          "lang": {
            "type": "string",
            "description": "Language code for search results (default: en)"
          },
          "limit": {
            "type": "number",
            "description": "Maximum number of results to return (default: 5)"
          },
          "query": {
            "type": "string",
            "description": "Search query string"
          },
          "filter": {
            "type": "string",
            "description": "Search filter"
          },
          "country": {
            "type": "string",
            "description": "Country code for search results (default: us)"
          },
          "location": {
            "type": "object",
            "properties": {
              "country": {
                "type": "string",
                "description": "Country code for geolocation"
              },
              "languages": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Language codes for content"
              }
            },
            "description": "Location settings for search"
          },
          "scrapeOptions": {
            "type": "object",
            "properties": {
              "formats": {
                "type": "array",
                "items": {
                  "enum": [
                    "markdown",
                    "html",
                    "rawHtml"
                  ],
                  "type": "string"
                },
                "description": "Content formats to extract from search results"
              },
              "waitFor": {
                "type": "number",
                "description": "Time in milliseconds to wait for dynamic content"
              },
              "onlyMainContent": {
                "type": "boolean",
                "description": "Extract only the main content from results"
              }
            },
            "description": "Options for scraping search results"
          }
        }
      }
    },
    {
      "name": "firecrawl_extract",
      "description": "Extract structured information from web pages using LLM. Supports both cloud AI and self-hosted LLM extraction.",
      "inputSchema": {
        "type": "object",
        "required": [
          "urls"
        ],
        "properties": {
          "urls": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of URLs to extract information from"
          },
          "prompt": {
            "type": "string",
            "description": "Prompt for the LLM extraction"
          },
          "schema": {
            "type": "object",
            "description": "JSON schema for structured data extraction"
          },
          "systemPrompt": {
            "type": "string",
            "description": "System prompt for LLM extraction"
          },
          "enableWebSearch": {
            "type": "boolean",
            "description": "Enable web search for additional context"
          },
          "includeSubdomains": {
            "type": "boolean",
            "description": "Include subdomains in extraction"
          },
          "allowExternalLinks": {
            "type": "boolean",
            "description": "Allow extraction from external links"
          }
        }
      }
    },
    {
      "name": "firecrawl_deep_research",
      "description": "Conduct deep research on a query using web crawling, search, and AI analysis.",
      "inputSchema": {
        "type": "object",
        "required": [
          "query"
        ],
        "properties": {
          "query": {
            "type": "string",
            "description": "The query to research"
          },
          "maxUrls": {
            "type": "number",
            "description": "Maximum number of URLs to analyze (1-1000)"
          },
          "maxDepth": {
            "type": "number",
            "description": "Maximum depth of research iterations (1-10)"
          },
          "timeLimit": {
            "type": "number",
            "description": "Time limit in seconds (30-300)"
          }
        }
      }
    },
    {
      "name": "firecrawl_generate_llmstxt",
      "description": "Generate standardized LLMs.txt file for a given URL, which provides context about how LLMs should interact with the website.",
      "inputSchema": {
        "type": "object",
        "required": [
          "url"
        ],
        "properties": {
          "url": {
            "type": "string",
            "description": "The URL to generate LLMs.txt from"
          },
          "maxUrls": {
            "type": "number",
            "description": "Maximum number of URLs to process (1-100, default: 10)"
          },
          "showFullText": {
            "type": "boolean",
            "description": "Whether to show the full LLMs-full.txt in the response"
          }
        }
      }
    }
  ],
  "connections": [
    {
      "type": "stdio",
      "bundleUrl": "https://backend.smithery.ai/storage/v1/object/public/bundles/@Krieg2065/firecrawl-mcp-server/server.mcpb",
      "runtime": "node",
      "configSchema": {
        "type": "object",
        "required": [
          "fireCrawlApiKey"
        ],
        "properties": {
          "fireCrawlApiKey": {
            "type": "string",
            "description": "Your Firecrawl API key. Required for cloud API usage."
          },
          "fireCrawlApiUrl": {
            "type": "string",
            "description": "Custom API endpoint for self-hosted instances. If provided, API key becomes optional."
          }
        }
      }
    }
  ]
}