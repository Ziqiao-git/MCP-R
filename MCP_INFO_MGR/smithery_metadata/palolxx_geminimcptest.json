{
  "qualifiedName": "@palolxx/geminimcptest",
  "displayName": "Gemini Thinking 2.5 Pro",
  "description": "Leverage advanced analytical thinking capabilities to break down complex problems and generate thoughtful responses. Enhance your problem-solving process with insights, confidence levels, and alternative approaches, all while maintaining session persistence for ongoing analysis.",
  "iconUrl": "https://icons.duckduckgo.com/ip3/modelcontextprotocol.io.ico",
  "remote": false,
  "deploymentUrl": null,
  "security": null,
  "tools": [
    {
      "name": "geminithinking",
      "description": "A detailed tool for that uses Gemini 2.5 Pro dynamic and reflective problem-solving through Gemini AI.\nThis tool helps analyze problems through a flexible thinking process powered by Google's Gemini model.\nEach thought can build on, question, or revise previous insights as understanding deepens.\n\nWhen to use this tool:\n- Breaking down complex problems into steps\n- Planning and design with room for revision\n- Analysis that might need course correction\n- Problems where the full scope might not be clear initially\n- Problems that require a multi-step solution\n- Tasks that need to maintain context over multiple steps\n- Situations where irrelevant information needs to be filtered out\n\nKey features:\n- Leverages Gemini AI for deep analytical thinking\n- Provides meta-commentary on the reasoning process\n- Indicates confidence levels for generated thoughts\n- Suggests alternative approaches when relevant\n- You can adjust total_thoughts up or down as you progress\n- You can question or revise previous thoughts\n- You can add more thoughts even after reaching what seemed like the end\n- You can express uncertainty and explore alternative approaches\n- Not every thought needs to build linearly - you can branch or backtrack\n- Session persistence: save and resume your analysis sessions\n\nParameters explained:\n- query: The question or problem to be analyzed\n- context: Additional context information (e.g., code snippets, background)\n- approach: Suggested approach to the problem (optional)\n- previousThoughts: Array of previous thoughts for context\n- thought: The current thinking step (if empty, will be generated by Gemini)\n- next_thought_needed: True if you need more thinking, even if at what seemed like the end\n- thought_number: Current number in sequence (can go beyond initial total if needed)\n- total_thoughts: Current estimate of thoughts needed (can be adjusted up/down)\n- is_revision: A boolean indicating if this thought revises previous thinking\n- revises_thought: If is_revision is true, which thought number is being reconsidered\n- branch_from_thought: If branching, which thought number is the branching point\n- branch_id: Identifier for the current branch (if any)\n- needs_more_thoughts: If reaching end but realizing more thoughts needed\n- metaComments: Meta-commentary from Gemini about its reasoning process\n- confidenceLevel: Gemini's confidence in the generated thought (0-1)\n- alternativePaths: Alternative approaches suggested by Gemini\n\nSession commands:\n- sessionCommand: Command to manage sessions ('save', 'load', 'getState')\n- sessionPath: Path to save or load the session file (required for 'save' and 'load' commands)\n\nYou should:\n1. Start with a clear query and any relevant context\n2. Let Gemini generate thoughts by not providing the 'thought' parameter\n3. Review the generated thoughts and meta-commentary\n4. Feel free to revise or branch thoughts as needed\n5. Consider alternative paths suggested by Gemini\n6. Only set next_thought_needed to false when truly done\n7. give realy realy long thinking results,like 1000words or something it should be a lot\n7. give realy realy long thinking results,like 1000words or something it should be a lot\n7. give realy realy long thinking results,like 1000words or something it should be a lot\n8. Use session commands to save your progress and resume later",
      "inputSchema": {
        "type": "object",
        "required": [
          "query",
          "nextThoughtNeeded",
          "thoughtNumber",
          "totalThoughts"
        ],
        "properties": {
          "query": {
            "type": "string",
            "description": "The question or problem to analyze"
          },
          "context": {
            "type": "string",
            "description": "Additional context information"
          },
          "thought": {
            "type": "string",
            "description": "Your current thinking step (if empty, will be generated by Gemini)"
          },
          "approach": {
            "type": "string",
            "description": "Suggested approach to the problem"
          },
          "branchId": {
            "type": "string",
            "description": "Branch identifier"
          },
          "isRevision": {
            "type": "boolean",
            "description": "Whether this revises previous thinking"
          },
          "sessionPath": {
            "type": "string",
            "description": "Path to save or load the session file"
          },
          "metaComments": {
            "type": "string",
            "description": "Meta-commentary about the reasoning process"
          },
          "thoughtNumber": {
            "type": "integer",
            "minimum": 1,
            "description": "Current thought number"
          },
          "totalThoughts": {
            "type": "integer",
            "minimum": 1,
            "description": "Estimated total thoughts needed"
          },
          "revisesThought": {
            "type": "integer",
            "minimum": 1,
            "description": "Which thought is being reconsidered"
          },
          "sessionCommand": {
            "type": "string",
            "description": "Command to manage sessions ('save', 'load', 'getState')"
          },
          "confidenceLevel": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "description": "Confidence level in the generated thought (0-1)"
          },
          "alternativePaths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Alternative approaches suggested"
          },
          "previousThoughts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of previous thoughts for context"
          },
          "branchFromThought": {
            "type": "integer",
            "minimum": 1,
            "description": "Branching point thought number"
          },
          "needsMoreThoughts": {
            "type": "boolean",
            "description": "If more thoughts are needed"
          },
          "nextThoughtNeeded": {
            "type": "boolean",
            "description": "Whether another thought step is needed"
          }
        }
      }
    }
  ],
  "connections": [
    {
      "type": "stdio",
      "bundleUrl": "https://backend.smithery.ai/storage/v1/object/public/bundles/@palolxx/geminimcptest/server.mcpb",
      "runtime": "node",
      "configSchema": {
        "type": "object",
        "required": [
          "geminiApiKey"
        ],
        "properties": {
          "geminiApiKey": {
            "type": "string",
            "description": "Your Google Gemini API Key"
          }
        }
      }
    }
  ]
}