{
  "qualifiedName": "@vimtor/things-3",
  "displayName": "Things 3",
  "description": "Manage Things 3 todos and projects.",
  "iconUrl": "https://spjawbfpwezjfmicopsl.supabase.co/storage/v1/object/public/server-icons/f91fff55-2dd7-43bf-a096-165b24ffd514.png",
  "remote": true,
  "deploymentUrl": "https://server.smithery.ai/@vimtor/things-3",
  "security": {
    "scanPassed": true
  },
  "tools": [
    {
      "name": "get_today",
      "annotations": {
        "readOnlyHint": true
      },
      "description": "Get today's todos and projects.",
      "inputSchema": {
        "type": "object",
        "title": "get_todayArguments",
        "properties": {}
      },
      "outputSchema": {
        "type": "object",
        "title": "get_todayOutput",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "array",
            "items": {},
            "title": "Result"
          }
        }
      }
    },
    {
      "name": "get_inbox",
      "annotations": {
        "readOnlyHint": true
      },
      "description": "Get inbox contents.",
      "inputSchema": {
        "type": "object",
        "title": "get_inboxArguments",
        "properties": {}
      },
      "outputSchema": {
        "type": "object",
        "title": "get_inboxOutput",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "array",
            "items": {},
            "title": "Result"
          }
        }
      }
    },
    {
      "name": "get_trash",
      "annotations": {
        "readOnlyHint": true
      },
      "description": "Get trash contents.",
      "inputSchema": {
        "type": "object",
        "title": "get_trashArguments",
        "properties": {}
      },
      "outputSchema": {
        "type": "object",
        "title": "get_trashOutput",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "array",
            "items": {},
            "title": "Result"
          }
        }
      }
    },
    {
      "name": "get_logbook",
      "annotations": {
        "readOnlyHint": true
      },
      "description": "Get logbook contents.",
      "inputSchema": {
        "type": "object",
        "title": "get_logbookArguments",
        "properties": {}
      },
      "outputSchema": {
        "type": "object",
        "title": "get_logbookOutput",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "array",
            "items": {},
            "title": "Result"
          }
        }
      }
    },
    {
      "name": "get_completed",
      "annotations": {
        "readOnlyHint": true
      },
      "description": "Get completed todos and projects.\n\n    Args:\n        last: Limit returned tasks to tasks created within the last X days, weeks, or years. For example: '3d', '5w', or '1y'.\n    ",
      "inputSchema": {
        "type": "object",
        "title": "get_completedArguments",
        "properties": {
          "last": {
            "type": "string",
            "title": "Last",
            "default": null
          }
        }
      },
      "outputSchema": {
        "type": "object",
        "title": "get_completedOutput",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "array",
            "items": {},
            "title": "Result"
          }
        }
      }
    },
    {
      "name": "get_deadlines",
      "annotations": {
        "readOnlyHint": true
      },
      "description": "Get deadlines.",
      "inputSchema": {
        "type": "object",
        "title": "get_deadlinesArguments",
        "properties": {}
      },
      "outputSchema": {
        "type": "object",
        "title": "get_deadlinesOutput",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "array",
            "items": {},
            "title": "Result"
          }
        }
      }
    },
    {
      "name": "get_anytime",
      "annotations": {
        "readOnlyHint": true
      },
      "description": "Get anytime todos and projects.",
      "inputSchema": {
        "type": "object",
        "title": "get_anytimeArguments",
        "properties": {}
      },
      "outputSchema": {
        "type": "object",
        "title": "get_anytimeOutput",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "array",
            "items": {},
            "title": "Result"
          }
        }
      }
    },
    {
      "name": "get_someday",
      "annotations": {
        "readOnlyHint": true
      },
      "description": "Get someday todos and projects.",
      "inputSchema": {
        "type": "object",
        "title": "get_somedayArguments",
        "properties": {}
      },
      "outputSchema": {
        "type": "object",
        "title": "get_somedayOutput",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "array",
            "items": {},
            "title": "Result"
          }
        }
      }
    },
    {
      "name": "get_upcoming",
      "annotations": {
        "readOnlyHint": true
      },
      "description": "Get upcoming todos and projects.",
      "inputSchema": {
        "type": "object",
        "title": "get_upcomingArguments",
        "properties": {}
      },
      "outputSchema": {
        "type": "object",
        "title": "get_upcomingOutput",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "array",
            "items": {},
            "title": "Result"
          }
        }
      }
    },
    {
      "name": "get_projects",
      "annotations": {
        "readOnlyHint": true
      },
      "description": "Get all projects.",
      "inputSchema": {
        "type": "object",
        "title": "get_projectsArguments",
        "properties": {}
      },
      "outputSchema": {
        "type": "object",
        "title": "get_projectsOutput",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "array",
            "items": {},
            "title": "Result"
          }
        }
      }
    },
    {
      "name": "get_areas",
      "annotations": {
        "readOnlyHint": true
      },
      "description": "Get all areas.",
      "inputSchema": {
        "type": "object",
        "title": "get_areasArguments",
        "properties": {}
      },
      "outputSchema": {
        "type": "object",
        "title": "get_areasOutput",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "array",
            "items": {},
            "title": "Result"
          }
        }
      }
    },
    {
      "name": "get_tags",
      "annotations": {
        "readOnlyHint": true
      },
      "description": "Get all tags.",
      "inputSchema": {
        "type": "object",
        "title": "get_tagsArguments",
        "properties": {}
      },
      "outputSchema": {
        "type": "object",
        "title": "get_tagsOutput",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "array",
            "items": {},
            "title": "Result"
          }
        }
      }
    },
    {
      "name": "get_project_todos",
      "annotations": {
        "readOnlyHint": true
      },
      "description": "Get all todos for a project.",
      "inputSchema": {
        "type": "object",
        "title": "get_project_todosArguments",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          }
        }
      },
      "outputSchema": {
        "type": "object",
        "title": "get_project_todosOutput",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "array",
            "items": {},
            "title": "Result"
          }
        }
      }
    },
    {
      "name": "get_area_todos",
      "annotations": {
        "readOnlyHint": true
      },
      "description": "Get all todos for an area.",
      "inputSchema": {
        "type": "object",
        "title": "get_area_todosArguments",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          }
        }
      },
      "outputSchema": {
        "type": "object",
        "title": "get_area_todosOutput",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "array",
            "items": {},
            "title": "Result"
          }
        }
      }
    },
    {
      "name": "search",
      "annotations": {
        "readOnlyHint": true
      },
      "description": "Search for todos, projects, areas, and tags.\n\n    Args:\n        query: Only pass the necessary keywords as if you were doing a Google search. If you didn't get a result, try a different query.\n    ",
      "inputSchema": {
        "type": "object",
        "title": "searchArguments",
        "required": [
          "query"
        ],
        "properties": {
          "query": {
            "type": "string",
            "title": "Query"
          }
        }
      },
      "outputSchema": {
        "type": "object",
        "title": "searchOutput",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "array",
            "items": {},
            "title": "Result"
          }
        }
      }
    },
    {
      "name": "get_task",
      "annotations": {
        "readOnlyHint": true
      },
      "description": "Get a task by ID.",
      "inputSchema": {
        "type": "object",
        "title": "get_taskArguments",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          }
        }
      },
      "outputSchema": {
        "type": "object",
        "title": "get_taskOutput",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "array",
            "items": {},
            "title": "Result"
          }
        }
      }
    },
    {
      "name": "update_todo",
      "annotations": {
        "idempotentHint": true,
        "destructiveHint": false
      },
      "description": "Update a todo.\n\n    Args:\n        id: The ID of the todo to update.\n        title: The new title of the todo.\n        completed: Whether the todo is completed.\n        notes: The new notes of the todo.\n        when: When should the todo be completed. Can be a date following the format YYYY-MM-DD or a string like \"tomorrow\", \"in 3 days\", etc.\n        deadline: The deadline of the todo. Can be a date following the format YYYY-MM-DD or a string like \"tomorrow\", \"in 3 days\", etc.\n    ",
      "inputSchema": {
        "type": "object",
        "title": "update_todoArguments",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "when": {
            "type": "string",
            "title": "When",
            "default": null
          },
          "notes": {
            "type": "string",
            "title": "Notes",
            "default": null
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": null
          },
          "deadline": {
            "type": "string",
            "title": "Deadline",
            "default": null
          },
          "completed": {
            "type": "boolean",
            "title": "Completed",
            "default": null
          }
        }
      },
      "outputSchema": {
        "type": "object",
        "title": "update_todoOutput",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "null",
            "title": "Result"
          }
        }
      }
    },
    {
      "name": "update_project",
      "annotations": {
        "idempotentHint": true,
        "destructiveHint": false
      },
      "description": "Update a project.\n\n    Args:\n        id: The ID of the project to update.\n        title: The new title of the project.\n        completed: Whether the project is completed.\n        notes: The new notes of the project.\n        when: When should the project be completed. Can be a date following the format YYYY-MM-DD or a string like \"tomorrow\", \"in 3 days\", etc.\n        deadline: The deadline of the project. Can be a date following the format YYYY-MM-DD or a string like \"tomorrow\", \"in 3 days\", etc.\n    ",
      "inputSchema": {
        "type": "object",
        "title": "update_projectArguments",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "when": {
            "type": "string",
            "title": "When",
            "default": null
          },
          "notes": {
            "type": "string",
            "title": "Notes",
            "default": null
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": null
          },
          "deadline": {
            "type": "string",
            "title": "Deadline",
            "default": null
          },
          "completed": {
            "type": "boolean",
            "title": "Completed",
            "default": null
          }
        }
      },
      "outputSchema": {
        "type": "object",
        "title": "update_projectOutput",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "null",
            "title": "Result"
          }
        }
      }
    },
    {
      "name": "create_todo",
      "annotations": {
        "idempotentHint": true,
        "destructiveHint": false
      },
      "description": "Create a todo.\n\n    Args:\n        title: The title of the todo.\n        list: The title of a project or area to add to.\n        notes: The notes of the todo.\n        when: When should the todo be completed. Can be a date following the format YYYY-MM-DD or a string like \"tomorrow\", \"in 3 days\", etc.\n        deadline: The deadline of the todo. Can be a date following the format YYYY-MM-DD or a string like \"tomorrow\", \"in 3 days\", etc.\n    ",
      "inputSchema": {
        "type": "object",
        "title": "create_todoArguments",
        "required": [
          "title"
        ],
        "properties": {
          "list": {
            "type": "string",
            "title": "List",
            "default": null
          },
          "when": {
            "type": "string",
            "title": "When",
            "default": null
          },
          "notes": {
            "type": "string",
            "title": "Notes",
            "default": null
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "deadline": {
            "type": "string",
            "title": "Deadline",
            "default": null
          }
        }
      },
      "outputSchema": {
        "type": "object",
        "title": "create_todoOutput",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "null",
            "title": "Result"
          }
        }
      }
    },
    {
      "name": "create_project",
      "annotations": {
        "idempotentHint": true,
        "destructiveHint": false
      },
      "description": "Create a project.\n\n    Args:\n        title: The title of the project.\n        area: The title of an area to add the project to.\n        notes: The notes of the project.\n        when: When should the project be completed. Can be a date following the format YYYY-MM-DD or a string like \"tomorrow\", \"in 3 days\", etc.\n        deadline: The deadline of the project. Can be a date following the format YYYY-MM-DD or a string like \"tomorrow\", \"in 3 days\", etc.\n    ",
      "inputSchema": {
        "type": "object",
        "title": "create_projectArguments",
        "required": [
          "title"
        ],
        "properties": {
          "area": {
            "type": "string",
            "title": "Area",
            "default": null
          },
          "when": {
            "type": "string",
            "title": "When",
            "default": null
          },
          "notes": {
            "type": "string",
            "title": "Notes",
            "default": null
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "deadline": {
            "type": "string",
            "title": "Deadline",
            "default": null
          }
        }
      },
      "outputSchema": {
        "type": "object",
        "title": "create_projectOutput",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "null",
            "title": "Result"
          }
        }
      }
    }
  ],
  "connections": [
    {
      "type": "http",
      "deploymentUrl": "https://server.smithery.ai/@vimtor/things-3/mcp",
      "configSchema": {
        "type": "object",
        "required": [
          "token"
        ],
        "properties": {
          "token": {
            "type": "string",
            "description": "Things URL authentication token. Can be found in the Things 3 settings."
          }
        }
      }
    }
  ]
}