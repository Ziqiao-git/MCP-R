{
  "qualifiedName": "@ebartan/bodrum-mcp-2025",
  "displayName": "Bodrum MCP Server",
  "description": "Provide a flexible and extensible server implementation for the Model Context Protocol to enable dynamic integration of LLMs with external data, tools, and prompts. Facilitate seamless interaction between language models and real-world resources through a standardized JSON-RPC interface. Enhance LLM applications by exposing customizable capabilities and resources securely and efficiently.",
  "iconUrl": "https://spjawbfpwezjfmicopsl.supabase.co/storage/v1/object/public/server-icons/a10e7f9f-3732-4cea-bc07-6fda7a8950cd.jpg",
  "remote": true,
  "deploymentUrl": "https://server.smithery.ai/@ebartan/bodrum-mcp-2025",
  "security": null,
  "tools": [
    {
      "name": "getBodrumInfo",
      "description": "Get comprehensive information about Bodrum",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "category": {
            "enum": [
              "general",
              "history",
              "tourism",
              "climate",
              "culture",
              "transport",
              "all"
            ],
            "type": "string",
            "description": "Category of information to retrieve"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "searchBodrumAttractions",
      "description": "Search for specific attractions or activities in Bodrum",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "keyword"
        ],
        "properties": {
          "keyword": {
            "type": "string",
            "description": "Keyword to search for (e.g., 'beach', 'castle', 'diving')"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "getTravelTips",
      "description": "Get practical travel tips for visiting Bodrum",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {},
        "additionalProperties": false
      }
    },
    {
      "name": "getBodrumWeather",
      "description": "Get typical weather information for Bodrum by season",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "season": {
            "enum": [
              "spring",
              "summer",
              "autumn",
              "winter",
              "all"
            ],
            "type": "string",
            "description": "Season to get weather information for"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "getCurrentWeather",
      "description": "Get current weather information for Bodrum from OpenWeatherMap",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "detailed": {
            "type": "boolean",
            "description": "Get detailed weather information including hourly forecast"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "getBodrumNeighborhoods",
      "description": "Get information about Bodrum neighborhoods (mahalleler)",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "limit": {
            "type": "number",
            "description": "Limit number of results"
          },
          "filter": {
            "enum": [
              "coastal",
              "central",
              "rural"
            ],
            "type": "string",
            "description": "Filter neighborhoods by type"
          },
          "sortBy": {
            "enum": [
              "name",
              "population",
              "postal_code"
            ],
            "type": "string",
            "description": "Sort neighborhoods by specified criteria"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "searchBodrumNeighborhood",
      "description": "Search for a specific Bodrum neighborhood and get detailed information",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the neighborhood to search for"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "getPublicServices",
      "description": "Get information about public services, municipality, and government offices in Bodrum",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "category": {
            "enum": [
              "municipality",
              "government",
              "emergency",
              "utilities",
              "education",
              "transportation",
              "all"
            ],
            "type": "string",
            "description": "Category of public service to retrieve"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "getEmergencyContacts",
      "description": "Get emergency contact numbers and services in Bodrum",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "service": {
            "enum": [
              "police",
              "gendarmerie",
              "fire",
              "health",
              "coastGuard",
              "all"
            ],
            "type": "string",
            "description": "Specific emergency service to get contact for"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "getBodrumEvents",
      "description": "Get information about events, festivals, and activities in Bodrum",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "type": {
            "enum": [
              "annual",
              "seasonal",
              "weekly",
              "cultural",
              "sports",
              "all"
            ],
            "type": "string",
            "description": "Type of events to retrieve"
          },
          "month": {
            "type": "string",
            "description": "Filter events by month name (e.g., 'Ağustos', 'Haziran')"
          },
          "season": {
            "enum": [
              "spring",
              "summer",
              "autumn",
              "winter"
            ],
            "type": "string",
            "description": "Filter seasonal events by specific season"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "getBelediyeEvents",
      "description": "Get municipality events from MongoDB belediye_events collection",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "limit": {
            "type": "number",
            "description": "Limit number of results (default: 20)"
          },
          "category": {
            "type": "string",
            "description": "Filter by event category"
          },
          "upcoming": {
            "type": "boolean",
            "description": "Show only upcoming events (default: true)"
          },
          "neighborhood": {
            "type": "string",
            "description": "Filter by neighborhood name"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "getMarketPlaces",
      "description": "Get information about market places (pazar yerleri) in Bodrum with neighborhood connections",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "day": {
            "enum": [
              "monday",
              "tuesday",
              "wednesday",
              "thursday",
              "friday",
              "saturday",
              "sunday",
              "all"
            ],
            "type": "string",
            "description": "Day of the week to get market information"
          },
          "type": {
            "enum": [
              "Sebze - Meyve Pazarı",
              "Tuhafiye",
              "Giyim",
              "Üretici pazarı-TARKO",
              "all"
            ],
            "type": "string",
            "description": "Type of market to filter"
          },
          "neighborhood": {
            "type": "string",
            "description": "Filter markets by neighborhood name"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "getDailyPharmacies",
      "description": "Get daily duty pharmacies (nöbetçi eczane) list for Bodrum",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "area": {
            "enum": [
              "merkez",
              "turgutreis",
              "yalikavak",
              "gumbet",
              "bitez",
              "all"
            ],
            "type": "string",
            "description": "Filter pharmacies by area"
          },
          "date": {
            "type": "string",
            "description": "Date in YYYY-MM-DD format (defaults to today)"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "getEducationInstitutions",
      "description": "Get information about education institutions in Bodrum by neighborhood",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "type": {
            "enum": [
              "public",
              "private",
              "all"
            ],
            "type": "string",
            "description": "Filter by institution type (public/private)"
          },
          "level": {
            "enum": [
              "anaokulu",
              "ilkokul",
              "ortaokul",
              "lise",
              "universite",
              "all"
            ],
            "type": "string",
            "description": "Filter by education level"
          },
          "includeOther": {
            "type": "boolean",
            "description": "Include other education services like courses"
          },
          "neighborhood": {
            "type": "string",
            "description": "Filter institutions by neighborhood name"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "searchEducationByName",
      "description": "Search for a specific education institution by name",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name or part of the name to search for"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "getMEBSchools",
      "description": "Get official MEB (Ministry of Education) schools list for Bodrum",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "type": {
            "enum": [
              "İlkokul",
              "Ortaokul",
              "Lise",
              "Anaokulu",
              "all"
            ],
            "type": "string",
            "description": "Filter by school type"
          },
          "neighborhood": {
            "type": "string",
            "description": "Filter by neighborhood name"
          },
          "includePrivate": {
            "type": "boolean",
            "description": "Include private schools (default: true)"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "searchMEBSchool",
      "description": "Search for a specific school in MEB official list",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "School name or part of it to search"
          }
        },
        "additionalProperties": false
      }
    }
  ],
  "connections": [
    {
      "type": "http",
      "deploymentUrl": "https://server.smithery.ai/@ebartan/bodrum-mcp-2025/mcp",
      "configSchema": {
        "type": "object",
        "title": "MCP Session Configuration",
        "properties": {
          "debug": {
            "type": "boolean",
            "default": false,
            "description": "Enable debug logging"
          }
        },
        "description": "Schema for the /mcp endpoint configuration",
        "x-mcp-version": "1.0",
        "x-query-style": "dot+bracket",
        "additionalProperties": false
      }
    }
  ]
}