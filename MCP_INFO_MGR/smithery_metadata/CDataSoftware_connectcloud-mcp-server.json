{
  "qualifiedName": "@CDataSoftware/connectcloud-mcp-server",
  "displayName": "CData Connect Cloud MCP Server",
  "description": "Enable AI agents to query and manage cloud-connected data sources using SQL, metadata introspection, and stored procedures. Integrate with AI workflows to enhance data-driven decision making.",
  "iconUrl": "https://icons.duckduckgo.com/ip3/www.cdata.com.ico",
  "remote": false,
  "deploymentUrl": null,
  "security": {
    "scanPassed": true
  },
  "tools": [
    {
      "name": "queryData",
      "description": "Execute SQL queries against connected data sources and retrieve results",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "query"
        ],
        "properties": {
          "query": {
            "type": "string",
            "description": "The SQL statement(s) to execute. Separate multiple statements with semi-colons"
          },
          "parameters": {
            "type": "object",
            "description": "A JSON object containing a list of query parameters. All parameter names must begin with @",
            "additionalProperties": {}
          },
          "schemaOnly": {
            "type": "boolean",
            "description": "If true, the result only includes column metadata"
          },
          "defaultSchema": {
            "type": "string",
            "description": "Schema to use if tables are not prefixed with a schema name"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "execData",
      "description": "Execute stored procedures against connected data sources",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "procedure"
        ],
        "properties": {
          "procedure": {
            "type": "string",
            "description": "The name of the stored procedure to execute"
          },
          "parameters": {
            "type": "object",
            "description": "A JSON object containing procedure parameters. All parameter names must begin with @",
            "additionalProperties": {}
          },
          "defaultSchema": {
            "type": "string",
            "description": "Schema to use if the procedure is not prefixed with a schema name"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "getCatalogs",
      "description": "Retrieve a list of available connections from CData Connect Cloud.  The connection names should be used as catalog names in other tools and in any queries to CData Connect Cloud. Use the `getSchemas` tool to get a list of available schemas for a specific catalog.",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {},
        "additionalProperties": false
      }
    },
    {
      "name": "getColumns",
      "description": "Retrieve a list of available database columns from CData Connect Cloud for a specific catalog, schema, and table",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "tableName": {
            "type": "string",
            "description": "Optional table name to filter columns by"
          },
          "columnName": {
            "type": "string",
            "description": "Optional column name to filter by"
          },
          "schemaName": {
            "type": "string",
            "description": "Optional schema name to filter columns by"
          },
          "catalogName": {
            "type": "string",
            "description": "Optional catalog name to filter columns by"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "getExportedKeys",
      "description": "Retrieve a list of foreign key relationships from CData Connect Cloud for a specific catalog, schema, and table",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "tableName": {
            "type": "string",
            "description": "Optional table name to filter by"
          },
          "schemaName": {
            "type": "string",
            "description": "Optional schema name to filter keys by"
          },
          "catalogName": {
            "type": "string",
            "description": "Optional catalog name to filter keys by"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "getImportedKeys",
      "description": "Retrieve a list of foreign key relationships from CData Connect Cloud for a specific catalog, schema, and table",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "tableName": {
            "type": "string",
            "description": "Optional table name to filter by"
          },
          "schemaName": {
            "type": "string",
            "description": "Optional schema name to filter keys by"
          },
          "catalogName": {
            "type": "string",
            "description": "Optional catalog name to filter keys by"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "getIndexes",
      "description": "Retrieve a list of indexes from CData Connect Cloud for a specific catalog, schema, and table",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "tableName": {
            "type": "string",
            "description": "Optional table name to filter by"
          },
          "schemaName": {
            "type": "string",
            "description": "Optional schema name to filter indexes by"
          },
          "catalogName": {
            "type": "string",
            "description": "Optional catalog name to filter indexes by"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "getPrimaryKeys",
      "description": "Retrieve a list of primary keys from CData Connect Cloud for a specific catalog, schema, and table",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "tableName": {
            "type": "string",
            "description": "Optional table name to filter by"
          },
          "schemaName": {
            "type": "string",
            "description": "Optional schema name to filter keys by"
          },
          "catalogName": {
            "type": "string",
            "description": "Optional catalog name to filter keys by"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "getProcedureParameters",
      "description": "Retrieve a list of stored procedure parameters from CData Connect Cloud for a specific catalog, schema, and procedure",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "schemaName": {
            "type": "string",
            "description": "Optional schema name to filter parameters by"
          },
          "catalogName": {
            "type": "string",
            "description": "Optional catalog name to filter parameters by"
          },
          "parameterName": {
            "type": "string",
            "description": "Optional parameter name to filter by"
          },
          "procedureName": {
            "type": "string",
            "description": "Optional procedure name to filter parameters by"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "getProcedures",
      "description": "Retrieve a list of stored procedures from CData Connect Cloud for a specific catalog and schema",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "schemaName": {
            "type": "string",
            "description": "Optional schema name to filter procedures by"
          },
          "catalogName": {
            "type": "string",
            "description": "Optional catalog name to filter procedures by"
          },
          "procedureName": {
            "type": "string",
            "description": "Optional procedure name to filter by"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "getSchemas",
      "description": "Retrieve a list of available database schemas from CData Connect Cloud for a specific catalog.  Use the `getTables` tool to get a list of available tables for a specific catalog and schema.",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "catalogName": {
            "type": "string",
            "description": "Optional catalog name to filter schemas by"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "getTables",
      "description": "Retrieve a list of available database tables from CData Connect Cloud for a specific catalog and schema.  Use the `getColumns` tool to get a list of available columns for a specific table.",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "tableName": {
            "type": "string",
            "description": "Optional table name to filter by"
          },
          "schemaName": {
            "type": "string",
            "description": "Optional schema name to filter tables by"
          },
          "catalogName": {
            "type": "string",
            "description": "Optional catalog name to filter tables by"
          }
        },
        "additionalProperties": false
      }
    }
  ],
  "connections": [
    {
      "type": "stdio",
      "bundleUrl": "https://backend.smithery.ai/storage/v1/object/public/bundles/@CDataSoftware/connectcloud-mcp-server/server.mcpb",
      "runtime": "node",
      "configSchema": {
        "type": "object",
        "required": [
          "cdataUsername",
          "cdataPat"
        ],
        "properties": {
          "host": {
            "type": "string",
            "default": "0.0.0.0",
            "description": "Host address if using HTTP/SSE transport"
          },
          "port": {
            "type": "number",
            "description": "Port number if using HTTP/SSE transport"
          },
          "cdataPat": {
            "type": "string",
            "description": "CData Personal Access Token"
          },
          "cdataUrl": {
            "type": "string",
            "default": "https://cloud.cdata.com",
            "description": "CData Connect Cloud service URL"
          },
          "logLevel": {
            "type": "string",
            "default": "info",
            "description": "Log level (e.g. info, debug, error)"
          },
          "transport": {
            "type": "string",
            "default": "stdio",
            "description": "Transport protocol to use"
          },
          "logEnabled": {
            "type": "boolean",
            "default": false,
            "description": "Enable logging"
          },
          "cdataUsername": {
            "type": "string",
            "description": "CData Connect Cloud username"
          }
        }
      }
    }
  ]
}