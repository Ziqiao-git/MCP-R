{
  "qualifiedName": "@yoriichi-07/multi_orchestrator_mcp",
  "displayName": "Multi Orchestrator",
  "description": "Coordinate specialized roles to plan, build, test, and deploy applications end to end. Generate architecture, automatically fix code, and produce comprehensive tests to accelerate delivery and improve quality. Monitor health and analytics to keep projects on track.",
  "iconUrl": "https://icons.duckduckgo.com/ip3/github.com.ico",
  "remote": true,
  "deploymentUrl": "https://server.smithery.ai/@yoriichi-07/multi_orchestrator_mcp",
  "security": null,
  "tools": [
    {
      "name": "ping",
      "_meta": {
        "_fastmcp": {
          "tags": []
        }
      },
      "description": "Simple health check ping",
      "inputSchema": {
        "type": "object",
        "properties": {}
      },
      "outputSchema": {
        "type": "object",
        "title": "_WrappedResult",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "string",
            "title": "Result"
          }
        },
        "x-fastmcp-wrap-result": true
      }
    },
    {
      "name": "orchestrate_task",
      "_meta": {
        "_fastmcp": {
          "tags": []
        }
      },
      "description": "Orchestrate a complex development task using multiple AI agents\n\nArgs:\n    task_description: Description of the task to be completed\n    task_type: Type of task (development, architecture, testing, deployment)\n    priority: Task priority (low, normal, high, critical)",
      "inputSchema": {
        "type": "object",
        "required": [
          "task_description"
        ],
        "properties": {
          "priority": {
            "type": "string",
            "title": "Priority",
            "default": "normal"
          },
          "task_type": {
            "type": "string",
            "title": "Task Type",
            "default": "development"
          },
          "task_description": {
            "type": "string",
            "title": "Task Description"
          }
        }
      },
      "outputSchema": {
        "type": "object",
        "additionalProperties": true
      }
    },
    {
      "name": "generate_architecture",
      "_meta": {
        "_fastmcp": {
          "tags": []
        }
      },
      "description": "Generate software architecture recommendations\n\nArgs:\n    project_description: Description of the project\n    tech_stack: List of technologies to use\n    requirements: List of functional and non-functional requirements",
      "inputSchema": {
        "type": "object",
        "required": [
          "project_description",
          "tech_stack",
          "requirements"
        ],
        "properties": {
          "tech_stack": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Tech Stack"
          },
          "requirements": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Requirements"
          },
          "project_description": {
            "type": "string",
            "title": "Project Description"
          }
        }
      },
      "outputSchema": {
        "type": "object",
        "additionalProperties": true
      }
    },
    {
      "name": "auto_fix_code",
      "_meta": {
        "_fastmcp": {
          "tags": []
        }
      },
      "description": "Automatically fix code issues using self-healing capabilities\n\nArgs:\n    code: The code that has issues\n    error_message: The error message encountered\n    context: Additional context about the code",
      "inputSchema": {
        "type": "object",
        "required": [
          "code",
          "error_message"
        ],
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          },
          "context": {
            "type": "string",
            "title": "Context",
            "default": ""
          },
          "error_message": {
            "type": "string",
            "title": "Error Message"
          }
        }
      },
      "outputSchema": {
        "type": "object",
        "additionalProperties": true
      }
    },
    {
      "name": "list_capabilities",
      "_meta": {
        "_fastmcp": {
          "tags": []
        }
      },
      "description": "List all available capabilities and agent types including advanced upgrades",
      "inputSchema": {
        "type": "object",
        "properties": {}
      },
      "outputSchema": {
        "type": "object",
        "additionalProperties": true
      }
    },
    {
      "name": "get_system_status",
      "_meta": {
        "_fastmcp": {
          "tags": []
        }
      },
      "description": "Get current system status and health metrics",
      "inputSchema": {
        "type": "object",
        "properties": {}
      },
      "outputSchema": {
        "type": "object",
        "additionalProperties": true
      }
    },
    {
      "name": "advanced_generate_application",
      "_meta": {
        "_fastmcp": {
          "tags": []
        }
      },
      "description": "Enterprise application generation using advanced AI agents\n\nArgs:\n    description: Detailed description of the application to build\n    complexity_level: Target complexity (simple, advanced, enterprise, professional)\n    innovation_requirements: List of innovative features to include\n    deployment_strategy: Deployment approach (local, cloud-native, multi-cloud, edge)",
      "inputSchema": {
        "type": "object",
        "required": [
          "description"
        ],
        "properties": {
          "description": {
            "type": "string",
            "title": "Description"
          },
          "complexity_level": {
            "type": "string",
            "title": "Complexity Level",
            "default": "advanced"
          },
          "deployment_strategy": {
            "type": "string",
            "title": "Deployment Strategy",
            "default": "cloud-native"
          },
          "innovation_requirements": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Innovation Requirements",
            "default": null
          }
        }
      },
      "outputSchema": {
        "type": "object",
        "additionalProperties": true
      }
    },
    {
      "name": "autonomous_architect",
      "_meta": {
        "_fastmcp": {
          "tags": []
        }
      },
      "description": "Activate the Autonomous Architect Agent for dynamic system design\n\nArgs:\n    project_goals: List of high-level project objectives\n    constraints: Technical, business, or resource constraints\n    learning_objectives: Areas where the agent should learn and improve",
      "inputSchema": {
        "type": "object",
        "required": [
          "project_goals"
        ],
        "properties": {
          "constraints": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Constraints",
            "default": null
          },
          "project_goals": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Project Goals"
          },
          "learning_objectives": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Learning Objectives",
            "default": null
          }
        }
      },
      "outputSchema": {
        "type": "object",
        "additionalProperties": true
      }
    },
    {
      "name": "proactive_quality_assurance",
      "_meta": {
        "_fastmcp": {
          "tags": []
        }
      },
      "description": "Activate proactive quality framework with policy-as-code\n\nArgs:\n    code_context: Code or project context to analyze\n    quality_standards: Custom quality policies to apply\n    auto_remediation: Whether to automatically fix violations",
      "inputSchema": {
        "type": "object",
        "required": [
          "code_context"
        ],
        "properties": {
          "code_context": {
            "type": "string",
            "title": "Code Context"
          },
          "auto_remediation": {
            "type": "boolean",
            "title": "Auto Remediation",
            "default": true
          },
          "quality_standards": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Quality Standards",
            "default": null
          }
        }
      },
      "outputSchema": {
        "type": "object",
        "additionalProperties": true
      }
    },
    {
      "name": "evolutionary_prompt_optimization",
      "_meta": {
        "_fastmcp": {
          "tags": []
        }
      },
      "description": "Activate evolutionary prompt engine for self-improving AI communication\n\nArgs:\n    base_prompt: Initial prompt to optimize\n    optimization_goals: Specific areas to improve (clarity, effectiveness, etc.)\n    performance_metrics: Current performance data for optimization",
      "inputSchema": {
        "type": "object",
        "required": [
          "base_prompt"
        ],
        "properties": {
          "base_prompt": {
            "type": "string",
            "title": "Base Prompt"
          },
          "optimization_goals": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Optimization Goals",
            "default": null
          },
          "performance_metrics": {
            "type": "object",
            "title": "Performance Metrics",
            "default": null,
            "additionalProperties": {
              "type": "number"
            }
          }
        }
      },
      "outputSchema": {
        "type": "object",
        "additionalProperties": true
      }
    },
    {
      "name": "last_mile_cloud_deployment",
      "_meta": {
        "_fastmcp": {
          "tags": []
        }
      },
      "description": "Activate Last Mile Cloud Agent for autonomous deployment and verification\n\nArgs:\n    application_context: Application details and requirements\n    target_environments: Target deployment environments\n    verification_requirements: Custom verification criteria",
      "inputSchema": {
        "type": "object",
        "required": [
          "application_context"
        ],
        "properties": {
          "application_context": {
            "type": "string",
            "title": "Application Context"
          },
          "target_environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Target Environments",
            "default": null
          },
          "verification_requirements": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Verification Requirements",
            "default": null
          }
        }
      },
      "outputSchema": {
        "type": "object",
        "additionalProperties": true
      }
    },
    {
      "name": "debug_server_config",
      "_meta": {
        "_fastmcp": {
          "tags": []
        }
      },
      "description": "🔧 TEMPORARY DEBUG TOOL - No authentication required\n\nThis tool bypasses authentication to help diagnose server-side configuration issues.\nReturns environment variables and configuration status for troubleshooting.\n\n⚠️ Remove this tool after debugging is complete!",
      "inputSchema": {
        "type": "object",
        "properties": {}
      },
      "outputSchema": {
        "type": "object",
        "additionalProperties": true
      }
    }
  ],
  "connections": [
    {
      "type": "http",
      "deploymentUrl": "https://server.smithery.ai/@yoriichi-07/multi_orchestrator_mcp/mcp",
      "configSchema": {}
    }
  ]
}