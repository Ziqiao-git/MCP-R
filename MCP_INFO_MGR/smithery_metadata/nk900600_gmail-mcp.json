{
  "qualifiedName": "@nk900600/gmail-mcp",
  "displayName": "Gmail Email Management Server",
  "description": "Manage your Gmail emails, threads, labels, drafts, and settings through a standardized interface. Send, draft, and organize emails efficiently with full Gmail API coverage. Securely authenticate using OAuth2 for seamless mailbox operations.",
  "iconUrl": "https://icons.duckduckgo.com/ip3/github.com.ico",
  "remote": true,
  "deploymentUrl": "https://server.smithery.ai/@nk900600/gmail-mcp",
  "security": null,
  "tools": [
    {
      "name": "create_draft",
      "description": "Create a draft email in Gmail. Note the mechanics of the raw parameter.",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "cc": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of CC recipient email addresses"
          },
          "to": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of recipient email addresses"
          },
          "bcc": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of BCC recipient email addresses"
          },
          "raw": {
            "type": "string",
            "description": "The entire email message in base64url encoded RFC 2822 format, ignores params.to, cc, bcc, subject, body, includeBodyHtml if provided"
          },
          "body": {
            "type": "string",
            "description": "The body of the email"
          },
          "subject": {
            "type": "string",
            "description": "The subject of the email"
          },
          "threadId": {
            "type": "string",
            "description": "The thread ID to associate this draft with"
          },
          "includeBodyHtml": {
            "type": "boolean",
            "description": "Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "delete_draft",
      "description": "Delete a draft",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the draft to delete"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "get_draft",
      "description": "Get a specific draft by ID",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the draft to retrieve"
          },
          "includeBodyHtml": {
            "type": "boolean",
            "description": "Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "list_drafts",
      "description": "List drafts in the user's mailbox",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "q": {
            "type": "string",
            "description": "Only return drafts matching the specified query. Supports the same query format as the Gmail search box"
          },
          "maxResults": {
            "type": "number",
            "description": "Maximum number of drafts to return. Accepts values between 1-500"
          },
          "includeBodyHtml": {
            "type": "boolean",
            "description": "Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large"
          },
          "includeSpamTrash": {
            "type": "boolean",
            "description": "Include drafts from SPAM and TRASH in the results"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "send_draft",
      "description": "Send an existing draft",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the draft to send"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "create_label",
      "description": "Create a new label",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The display name of the label"
          },
          "color": {
            "type": "object",
            "required": [
              "textColor",
              "backgroundColor"
            ],
            "properties": {
              "textColor": {
                "type": "string",
                "description": "The text color of the label as hex string"
              },
              "backgroundColor": {
                "type": "string",
                "description": "The background color of the label as hex string"
              }
            },
            "description": "The color settings for the label",
            "additionalProperties": false
          },
          "labelListVisibility": {
            "enum": [
              "labelShow",
              "labelShowIfUnread",
              "labelHide"
            ],
            "type": "string",
            "description": "The visibility of the label in the label list"
          },
          "messageListVisibility": {
            "enum": [
              "show",
              "hide"
            ],
            "type": "string",
            "description": "The visibility of messages with this label in the message list"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "delete_label",
      "description": "Delete a label",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the label to delete"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "get_label",
      "description": "Get a specific label by ID",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the label to retrieve"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "list_labels",
      "description": "List all labels in the user's mailbox",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {},
        "additionalProperties": false
      }
    },
    {
      "name": "patch_label",
      "description": "Patch an existing label (partial update)",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the label to patch"
          },
          "name": {
            "type": "string",
            "description": "The display name of the label"
          },
          "color": {
            "type": "object",
            "required": [
              "textColor",
              "backgroundColor"
            ],
            "properties": {
              "textColor": {
                "type": "string",
                "description": "The text color of the label as hex string"
              },
              "backgroundColor": {
                "type": "string",
                "description": "The background color of the label as hex string"
              }
            },
            "description": "The color settings for the label",
            "additionalProperties": false
          },
          "labelListVisibility": {
            "enum": [
              "labelShow",
              "labelShowIfUnread",
              "labelHide"
            ],
            "type": "string",
            "description": "The visibility of the label in the label list"
          },
          "messageListVisibility": {
            "enum": [
              "show",
              "hide"
            ],
            "type": "string",
            "description": "The visibility of messages with this label in the message list"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "update_label",
      "description": "Update an existing label",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the label to update"
          },
          "name": {
            "type": "string",
            "description": "The display name of the label"
          },
          "color": {
            "type": "object",
            "required": [
              "textColor",
              "backgroundColor"
            ],
            "properties": {
              "textColor": {
                "type": "string",
                "description": "The text color of the label as hex string"
              },
              "backgroundColor": {
                "type": "string",
                "description": "The background color of the label as hex string"
              }
            },
            "description": "The color settings for the label",
            "additionalProperties": false
          },
          "labelListVisibility": {
            "enum": [
              "labelShow",
              "labelShowIfUnread",
              "labelHide"
            ],
            "type": "string",
            "description": "The visibility of the label in the label list"
          },
          "messageListVisibility": {
            "enum": [
              "show",
              "hide"
            ],
            "type": "string",
            "description": "The visibility of messages with this label in the message list"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "batch_delete_messages",
      "description": "Delete multiple messages",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "ids"
        ],
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The IDs of the messages to delete"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "batch_modify_messages",
      "description": "Modify the labels on multiple messages",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "ids"
        ],
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The IDs of the messages to modify"
          },
          "addLabelIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of label IDs to add to the messages"
          },
          "removeLabelIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of label IDs to remove from the messages"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "delete_message",
      "description": "Immediately and permanently delete a message",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the message to delete"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "get_message",
      "description": "Get a specific message by ID with format options",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the message to retrieve"
          },
          "includeBodyHtml": {
            "type": "boolean",
            "description": "Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "list_messages",
      "description": "List messages in the user's mailbox with optional filtering",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "q": {
            "type": "string",
            "description": "Only return messages matching the specified query. Supports the same query format as the Gmail search box"
          },
          "labelIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Only return messages with labels that match all of the specified label IDs"
          },
          "pageToken": {
            "type": "string",
            "description": "Page token to retrieve a specific page of results"
          },
          "maxResults": {
            "type": "number",
            "description": "Maximum number of messages to return. Accepts values between 1-500"
          },
          "includeBodyHtml": {
            "type": "boolean",
            "description": "Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large"
          },
          "includeSpamTrash": {
            "type": "boolean",
            "description": "Include messages from SPAM and TRASH in the results"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "modify_message",
      "description": "Modify the labels on a message",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the message to modify"
          },
          "addLabelIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of label IDs to add to the message"
          },
          "removeLabelIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of label IDs to remove from the message"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "send_message",
      "description": "Send an email message to specified recipients. Note the mechanics of the raw parameter.",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "cc": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of CC recipient email addresses"
          },
          "to": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of recipient email addresses"
          },
          "bcc": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of BCC recipient email addresses"
          },
          "raw": {
            "type": "string",
            "description": "The entire email message in base64url encoded RFC 2822 format, ignores params.to, cc, bcc, subject, body, includeBodyHtml if provided"
          },
          "body": {
            "type": "string",
            "description": "The body of the email"
          },
          "subject": {
            "type": "string",
            "description": "The subject of the email"
          },
          "threadId": {
            "type": "string",
            "description": "The thread ID to associate this message with"
          },
          "includeBodyHtml": {
            "type": "boolean",
            "description": "Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "trash_message",
      "description": "Move a message to the trash",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the message to move to trash"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "untrash_message",
      "description": "Remove a message from the trash",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the message to remove from trash"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "get_attachment",
      "description": "Get a message attachment",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "messageId",
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the attachment"
          },
          "messageId": {
            "type": "string",
            "description": "ID of the message containing the attachment"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "delete_thread",
      "description": "Delete a thread",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the thread to delete"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "get_thread",
      "description": "Get a specific thread by ID",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the thread to retrieve"
          },
          "includeBodyHtml": {
            "type": "boolean",
            "description": "Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "list_threads",
      "description": "List threads in the user's mailbox",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "q": {
            "type": "string",
            "description": "Only return threads matching the specified query"
          },
          "labelIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Only return threads with labels that match all of the specified label IDs"
          },
          "pageToken": {
            "type": "string",
            "description": "Page token to retrieve a specific page of results"
          },
          "maxResults": {
            "type": "number",
            "description": "Maximum number of threads to return"
          },
          "includeBodyHtml": {
            "type": "boolean",
            "description": "Whether to include the parsed HTML in the return for each body, excluded by default because they can be excessively large"
          },
          "includeSpamTrash": {
            "type": "boolean",
            "description": "Include threads from SPAM and TRASH in the results"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "modify_thread",
      "description": "Modify the labels applied to a thread",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the thread to modify"
          },
          "addLabelIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of label IDs to add to the thread"
          },
          "removeLabelIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of label IDs to remove from the thread"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "trash_thread",
      "description": "Move a thread to the trash",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the thread to move to trash"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "untrash_thread",
      "description": "Remove a thread from the trash",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the thread to remove from trash"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "get_auto_forwarding",
      "description": "Gets auto-forwarding settings",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {},
        "additionalProperties": false
      }
    },
    {
      "name": "get_imap",
      "description": "Gets IMAP settings",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {},
        "additionalProperties": false
      }
    },
    {
      "name": "get_language",
      "description": "Gets language settings",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {},
        "additionalProperties": false
      }
    },
    {
      "name": "get_pop",
      "description": "Gets POP settings",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {},
        "additionalProperties": false
      }
    },
    {
      "name": "get_vacation",
      "description": "Get vacation responder settings",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {},
        "additionalProperties": false
      }
    },
    {
      "name": "update_auto_forwarding",
      "description": "Updates automatic forwarding settings",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "enabled",
          "emailAddress",
          "disposition"
        ],
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Whether all incoming mail is automatically forwarded to another address"
          },
          "disposition": {
            "enum": [
              "leaveInInbox",
              "archive",
              "trash",
              "markRead"
            ],
            "type": "string",
            "description": "The state in which messages should be left after being forwarded"
          },
          "emailAddress": {
            "type": "string",
            "description": "Email address to which messages should be automatically forwarded"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "update_imap",
      "description": "Updates IMAP settings",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "enabled"
        ],
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Whether IMAP is enabled for the account"
          },
          "maxFolderSize": {
            "type": "number",
            "description": "An optional limit on the number of messages that can be accessed through IMAP"
          },
          "expungeBehavior": {
            "enum": [
              "archive",
              "trash",
              "deleteForever"
            ],
            "type": "string",
            "description": "The action that will be executed on a message when it is marked as deleted and expunged from the last visible IMAP folder"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "update_language",
      "description": "Updates language settings",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "displayLanguage"
        ],
        "properties": {
          "displayLanguage": {
            "type": "string",
            "description": "The language to display Gmail in, formatted as an RFC 3066 Language Tag"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "update_pop",
      "description": "Updates POP settings",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "accessWindow",
          "disposition"
        ],
        "properties": {
          "disposition": {
            "enum": [
              "archive",
              "trash",
              "leaveInInbox"
            ],
            "type": "string",
            "description": "The action that will be executed on a message after it has been fetched via POP"
          },
          "accessWindow": {
            "enum": [
              "disabled",
              "allMail",
              "fromNowOn"
            ],
            "type": "string",
            "description": "The range of messages which are accessible via POP"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "update_vacation",
      "description": "Update vacation responder settings",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "enableAutoReply",
          "responseBodyPlainText"
        ],
        "properties": {
          "endTime": {
            "type": "string",
            "description": "End time for sending auto-replies (epoch ms)"
          },
          "startTime": {
            "type": "string",
            "description": "Start time for sending auto-replies (epoch ms)"
          },
          "enableAutoReply": {
            "type": "boolean",
            "description": "Whether the vacation responder is enabled"
          },
          "responseSubject": {
            "type": "string",
            "description": "Optional subject line for the vacation responder auto-reply"
          },
          "restrictToDomain": {
            "type": "boolean",
            "description": "Whether responses are only sent to users in the same domain"
          },
          "restrictToContacts": {
            "type": "boolean",
            "description": "Whether responses are only sent to contacts"
          },
          "responseBodyPlainText": {
            "type": "string",
            "description": "Response body in plain text format"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "add_delegate",
      "description": "Adds a delegate to the specified account",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "delegateEmail"
        ],
        "properties": {
          "delegateEmail": {
            "type": "string",
            "description": "Email address of delegate to add"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "remove_delegate",
      "description": "Removes the specified delegate",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "delegateEmail"
        ],
        "properties": {
          "delegateEmail": {
            "type": "string",
            "description": "Email address of delegate to remove"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "get_delegate",
      "description": "Gets the specified delegate",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "delegateEmail"
        ],
        "properties": {
          "delegateEmail": {
            "type": "string",
            "description": "The email address of the delegate to retrieve"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "list_delegates",
      "description": "Lists the delegates for the specified account",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {},
        "additionalProperties": false
      }
    },
    {
      "name": "create_filter",
      "description": "Creates a filter",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "criteria",
          "action"
        ],
        "properties": {
          "action": {
            "type": "object",
            "properties": {
              "forward": {
                "type": "string",
                "description": "Email address that the message should be forwarded to"
              },
              "addLabelIds": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of labels to add to messages"
              },
              "removeLabelIds": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of labels to remove from messages"
              }
            },
            "description": "Actions to perform on messages matching the criteria",
            "additionalProperties": false
          },
          "criteria": {
            "type": "object",
            "properties": {
              "to": {
                "type": "string",
                "description": "The recipient's display name or email address"
              },
              "from": {
                "type": "string",
                "description": "The sender's display name or email address"
              },
              "size": {
                "type": "number",
                "description": "The size of the entire RFC822 message in bytes"
              },
              "query": {
                "type": "string",
                "description": "A Gmail search query that specifies the filter's criteria"
              },
              "subject": {
                "type": "string",
                "description": "Case-insensitive phrase in the message's subject"
              },
              "excludeChats": {
                "type": "boolean",
                "description": "Whether the response should exclude chats"
              },
              "negatedQuery": {
                "type": "string",
                "description": "A Gmail search query that specifies criteria the message must not match"
              },
              "hasAttachment": {
                "type": "boolean",
                "description": "Whether the message has any attachment"
              },
              "sizeComparison": {
                "enum": [
                  "smaller",
                  "larger"
                ],
                "type": "string",
                "description": "How the message size in bytes should be in relation to the size field"
              }
            },
            "description": "Filter criteria",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "delete_filter",
      "description": "Deletes a filter",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the filter to be deleted"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "get_filter",
      "description": "Gets a filter",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the filter to be fetched"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "list_filters",
      "description": "Lists the message filters of a Gmail user",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {},
        "additionalProperties": false
      }
    },
    {
      "name": "create_forwarding_address",
      "description": "Creates a forwarding address",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "forwardingEmail"
        ],
        "properties": {
          "forwardingEmail": {
            "type": "string",
            "description": "An email address to which messages can be forwarded"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "delete_forwarding_address",
      "description": "Deletes the specified forwarding address",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "forwardingEmail"
        ],
        "properties": {
          "forwardingEmail": {
            "type": "string",
            "description": "The forwarding address to be deleted"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "get_forwarding_address",
      "description": "Gets the specified forwarding address",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "forwardingEmail"
        ],
        "properties": {
          "forwardingEmail": {
            "type": "string",
            "description": "The forwarding address to be retrieved"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "list_forwarding_addresses",
      "description": "Lists the forwarding addresses for the specified account",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {},
        "additionalProperties": false
      }
    },
    {
      "name": "create_send_as",
      "description": "Creates a custom send-as alias",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "sendAsEmail"
        ],
        "properties": {
          "isPrimary": {
            "type": "boolean",
            "description": "Whether this address is the primary address"
          },
          "signature": {
            "type": "string",
            "description": "An optional HTML signature"
          },
          "displayName": {
            "type": "string",
            "description": "A name that appears in the 'From:' header"
          },
          "sendAsEmail": {
            "type": "string",
            "description": "The email address that appears in the 'From:' header"
          },
          "treatAsAlias": {
            "type": "boolean",
            "description": "Whether Gmail should treat this address as an alias"
          },
          "replyToAddress": {
            "type": "string",
            "description": "An optional email address that is included in a 'Reply-To:' header"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "delete_send_as",
      "description": "Deletes the specified send-as alias",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "sendAsEmail"
        ],
        "properties": {
          "sendAsEmail": {
            "type": "string",
            "description": "The send-as alias to be deleted"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "get_send_as",
      "description": "Gets the specified send-as alias",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "sendAsEmail"
        ],
        "properties": {
          "sendAsEmail": {
            "type": "string",
            "description": "The send-as alias to be retrieved"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "list_send_as",
      "description": "Lists the send-as aliases for the specified account",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {},
        "additionalProperties": false
      }
    },
    {
      "name": "patch_send_as",
      "description": "Patches the specified send-as alias",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "sendAsEmail"
        ],
        "properties": {
          "isPrimary": {
            "type": "boolean",
            "description": "Whether this address is the primary address"
          },
          "signature": {
            "type": "string",
            "description": "An optional HTML signature"
          },
          "displayName": {
            "type": "string",
            "description": "A name that appears in the 'From:' header"
          },
          "sendAsEmail": {
            "type": "string",
            "description": "The send-as alias to be updated"
          },
          "treatAsAlias": {
            "type": "boolean",
            "description": "Whether Gmail should treat this address as an alias"
          },
          "replyToAddress": {
            "type": "string",
            "description": "An optional email address that is included in a 'Reply-To:' header"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "update_send_as",
      "description": "Updates a send-as alias",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "sendAsEmail"
        ],
        "properties": {
          "isPrimary": {
            "type": "boolean",
            "description": "Whether this address is the primary address"
          },
          "signature": {
            "type": "string",
            "description": "An optional HTML signature"
          },
          "displayName": {
            "type": "string",
            "description": "A name that appears in the 'From:' header"
          },
          "sendAsEmail": {
            "type": "string",
            "description": "The send-as alias to be updated"
          },
          "treatAsAlias": {
            "type": "boolean",
            "description": "Whether Gmail should treat this address as an alias"
          },
          "replyToAddress": {
            "type": "string",
            "description": "An optional email address that is included in a 'Reply-To:' header"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "verify_send_as",
      "description": "Sends a verification email to the specified send-as alias",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "sendAsEmail"
        ],
        "properties": {
          "sendAsEmail": {
            "type": "string",
            "description": "The send-as alias to be verified"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "delete_smime_info",
      "description": "Deletes the specified S/MIME config for the specified send-as alias",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "sendAsEmail",
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The immutable ID for the S/MIME config"
          },
          "sendAsEmail": {
            "type": "string",
            "description": "The email address that appears in the 'From:' header"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "get_smime_info",
      "description": "Gets the specified S/MIME config for the specified send-as alias",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "sendAsEmail",
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The immutable ID for the S/MIME config"
          },
          "sendAsEmail": {
            "type": "string",
            "description": "The email address that appears in the 'From:' header"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "insert_smime_info",
      "description": "Insert (upload) the given S/MIME config for the specified send-as alias",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "sendAsEmail",
          "encryptedKeyPassword",
          "pkcs12"
        ],
        "properties": {
          "pkcs12": {
            "type": "string",
            "description": "PKCS#12 format containing a single private/public key pair and certificate chain"
          },
          "sendAsEmail": {
            "type": "string",
            "description": "The email address that appears in the 'From:' header"
          },
          "encryptedKeyPassword": {
            "type": "string",
            "description": "Encrypted key password"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "list_smime_info",
      "description": "Lists S/MIME configs for the specified send-as alias",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "sendAsEmail"
        ],
        "properties": {
          "sendAsEmail": {
            "type": "string",
            "description": "The email address that appears in the 'From:' header"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "set_default_smime_info",
      "description": "Sets the default S/MIME config for the specified send-as alias",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "sendAsEmail",
          "id"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The immutable ID for the S/MIME config"
          },
          "sendAsEmail": {
            "type": "string",
            "description": "The email address that appears in the 'From:' header"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "get_profile",
      "description": "Get the current user's Gmail profile",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {},
        "additionalProperties": false
      }
    },
    {
      "name": "watch_mailbox",
      "description": "Watch for changes to the user's mailbox",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "topicName"
        ],
        "properties": {
          "labelIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Label IDs to restrict notifications to"
          },
          "topicName": {
            "type": "string",
            "description": "The name of the Cloud Pub/Sub topic to publish notifications to"
          },
          "labelFilterAction": {
            "enum": [
              "include",
              "exclude"
            ],
            "type": "string",
            "description": "Whether to include or exclude the specified labels"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "stop_mail_watch",
      "description": "Stop receiving push notifications for the given user mailbox",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {},
        "additionalProperties": false
      }
    }
  ],
  "connections": [
    {
      "type": "http",
      "deploymentUrl": "https://server.smithery.ai/@nk900600/gmail-mcp/mcp",
      "configSchema": {
        "type": "object",
        "required": [
          "CLIENT_ID",
          "CLIENT_SECRET",
          "REFRESH_TOKEN"
        ],
        "properties": {
          "CLIENT_ID": {
            "type": "string",
            "description": "CLIENT_ID - OAuth2 client ID (required for remote server)"
          },
          "CLIENT_SECRET": {
            "type": "string",
            "description": "CLIENT_SECRET - OAuth2 client Secret (required for remote server)"
          },
          "REFRESH_TOKEN": {
            "type": "string",
            "description": "REFRESH_TOKEN - OAuth2 refresh token (required for remote server)"
          }
        },
        "description": "The CLIENT_ID, CLIENT_SECRET, and REFRESH_TOKEN are required for remote server usage."
      }
    }
  ]
}