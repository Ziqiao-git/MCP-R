{
  "qualifiedName": "@abhiphile/fermat-mcp",
  "displayName": "Fermat",
  "description": "Perform advanced mathematical computations including numerical and symbolic calculations, and generate various types of plots. Leverage integrations with NumPy, SymPy, and Matplotlib to handle algebra, calculus, linear algebra, statistics, and data visualization tasks efficiently. Enhance your workflows with a powerful MCP server tailored for mathematical and plotting operations.",
  "iconUrl": "https://icons.duckduckgo.com/ip3/github.com.ico",
  "remote": true,
  "deploymentUrl": "https://server.smithery.ai/@abhiphile/fermat-mcp",
  "security": null,
  "tools": [
    {
      "name": "mpl_mcp_plot_barchart",
      "description": "Plots barchart of given datavalues",
      "inputSchema": {
        "type": "object",
        "required": [
          "values"
        ],
        "properties": {
          "dpi": {
            "type": "integer",
            "title": "Dpi",
            "default": 200
          },
          "save": {
            "type": "boolean",
            "title": "Save",
            "default": false
          },
          "color": {
            "type": "string",
            "title": "Color",
            "default": "skyblue"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": ""
          },
          "labels": {
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels",
            "default": null
          },
          "values": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "title": "Values"
          },
          "xlabel": {
            "type": "string",
            "title": "Xlabel",
            "default": ""
          },
          "ylabel": {
            "type": "string",
            "title": "Ylabel",
            "default": ""
          },
          "orientation": {
            "enum": [
              "vertical",
              "horizontal"
            ],
            "type": "string",
            "title": "Orientation",
            "default": "vertical"
          }
        }
      }
    },
    {
      "name": "mpl_mcp_plot_scatter",
      "description": "Plots scatter chart of given datavalues",
      "inputSchema": {
        "type": "object",
        "required": [
          "x_data",
          "y_data"
        ],
        "properties": {
          "dpi": {
            "type": "integer",
            "title": "Dpi",
            "default": 200
          },
          "grid": {
            "type": "boolean",
            "title": "Grid",
            "default": true
          },
          "save": {
            "type": "boolean",
            "title": "Save",
            "default": false
          },
          "size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "number"
              },
              {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            ],
            "title": "Size",
            "default": 36
          },
          "alpha": {
            "type": "number",
            "title": "Alpha",
            "default": 0.7
          },
          "color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "title": "Color",
            "default": "blue"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": ""
          },
          "labels": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels",
            "default": null
          },
          "legend": {
            "type": "boolean",
            "title": "Legend",
            "default": false
          },
          "marker": {
            "type": "string",
            "title": "Marker",
            "default": "o"
          },
          "x_data": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "title": "X Data"
          },
          "xlabel": {
            "type": "string",
            "title": "Xlabel",
            "default": ""
          },
          "y_data": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "title": "Y Data"
          },
          "ylabel": {
            "type": "string",
            "title": "Ylabel",
            "default": ""
          },
          "figsize": {
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Figsize",
            "default": null
          },
          "edgecolors": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Edgecolors",
            "default": "face"
          },
          "linewidths": {
            "type": "number",
            "title": "Linewidths",
            "default": 1
          }
        }
      }
    },
    {
      "name": "mpl_mcp_plot_chart",
      "description": "Plots line/scatter/bar chart of given datavalues",
      "inputSchema": {
        "type": "object",
        "required": [
          "x_data",
          "y_data"
        ],
        "properties": {
          "dpi": {
            "type": "integer",
            "title": "Dpi",
            "default": 200
          },
          "grid": {
            "type": "boolean",
            "title": "Grid",
            "default": true
          },
          "save": {
            "type": "boolean",
            "title": "Save",
            "default": false
          },
          "color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "title": "Color",
            "default": "skyblue"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": ""
          },
          "labels": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels",
            "default": null
          },
          "legend": {
            "type": "boolean",
            "title": "Legend",
            "default": false
          },
          "x_data": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "title": "X Data"
          },
          "xlabel": {
            "type": "string",
            "title": "Xlabel",
            "default": ""
          },
          "y_data": {
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "type": "number"
                }
              },
              {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              }
            ],
            "title": "Y Data"
          },
          "ylabel": {
            "type": "string",
            "title": "Ylabel",
            "default": ""
          },
          "figsize": {
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Figsize",
            "default": null
          },
          "plot_type": {
            "type": "string",
            "title": "Plot Type",
            "default": "line"
          }
        }
      }
    },
    {
      "name": "mpl_mcp_plot_stem",
      "description": "Plots stem chart of given datavalues",
      "inputSchema": {
        "type": "object",
        "required": [
          "x_data",
          "y_data"
        ],
        "properties": {
          "dpi": {
            "type": "integer",
            "title": "Dpi",
            "default": 200
          },
          "grid": {
            "type": "boolean",
            "title": "Grid",
            "default": true
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": ""
          },
          "bottom": {
            "type": "number",
            "title": "Bottom",
            "default": 0
          },
          "colors": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "title": "Colors",
            "default": "blue"
          },
          "labels": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels",
            "default": null
          },
          "legend": {
            "type": "boolean",
            "title": "Legend",
            "default": false
          },
          "x_data": {
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "type": "number"
                }
              },
              {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              }
            ],
            "title": "X Data"
          },
          "xlabel": {
            "type": "string",
            "title": "Xlabel",
            "default": ""
          },
          "y_data": {
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "type": "number"
                }
              },
              {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              }
            ],
            "title": "Y Data"
          },
          "ylabel": {
            "type": "string",
            "title": "Ylabel",
            "default": ""
          },
          "basefmt": {
            "type": "string",
            "title": "Basefmt",
            "default": "k-"
          },
          "figsize": {
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Figsize",
            "default": null
          },
          "linefmt": {
            "type": "string",
            "title": "Linefmt",
            "default": "-"
          },
          "markerfmt": {
            "type": "string",
            "title": "Markerfmt",
            "default": "o"
          },
          "orientation": {
            "type": "string",
            "title": "Orientation",
            "default": "vertical"
          }
        }
      }
    },
    {
      "name": "mpl_mcp_plot_stack",
      "description": "Plots stacked area/bar chart of given datavalues",
      "inputSchema": {
        "type": "object",
        "required": [
          "x_data",
          "y_data"
        ],
        "properties": {
          "dpi": {
            "type": "integer",
            "title": "Dpi",
            "default": 200
          },
          "grid": {
            "type": "boolean",
            "title": "Grid",
            "default": true
          },
          "alpha": {
            "type": "number",
            "title": "Alpha",
            "default": 0.7
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": ""
          },
          "colors": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Colors",
            "default": null
          },
          "labels": {
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels",
            "default": null
          },
          "legend": {
            "type": "boolean",
            "title": "Legend",
            "default": true
          },
          "x_data": {
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "type": "number"
                }
              },
              {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              }
            ],
            "title": "X Data"
          },
          "xlabel": {
            "type": "string",
            "title": "Xlabel",
            "default": ""
          },
          "y_data": {
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  }
                }
              },
              {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            ],
            "title": "Y Data"
          },
          "ylabel": {
            "type": "string",
            "title": "Ylabel",
            "default": ""
          },
          "figsize": {
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Figsize",
            "default": null
          },
          "chart_type": {
            "type": "string",
            "title": "Chart Type",
            "default": "area"
          }
        }
      }
    },
    {
      "name": "mpl_mcp_eqn_chart",
      "description": "Plots mathematical equations",
      "inputSchema": {
        "type": "object",
        "required": [
          "equations"
        ],
        "properties": {
          "dpi": {
            "type": "integer",
            "title": "Dpi",
            "default": 200
          },
          "grid": {
            "type": "boolean",
            "title": "Grid",
            "default": true
          },
          "save": {
            "type": "boolean",
            "title": "Save",
            "default": false
          },
          "alpha": {
            "type": "number",
            "title": "Alpha",
            "default": 1
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": "Equation Plot"
          },
          "x_max": {
            "type": "number",
            "title": "X Max",
            "default": 10
          },
          "x_min": {
            "type": "number",
            "title": "X Min",
            "default": -10
          },
          "legend": {
            "type": "boolean",
            "title": "Legend",
            "default": true
          },
          "xlabel": {
            "type": "string",
            "title": "Xlabel",
            "default": "x"
          },
          "ylabel": {
            "type": "string",
            "title": "Ylabel",
            "default": "y"
          },
          "figsize": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "title": "Figsize",
            "default": [
              10,
              6
            ]
          },
          "equations": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "title": "Equations"
          },
          "linestyle": {
            "type": "string",
            "title": "Linestyle",
            "default": "-"
          },
          "linewidth": {
            "type": "number",
            "title": "Linewidth",
            "default": 2
          },
          "num_points": {
            "type": "integer",
            "title": "Num Points",
            "default": 1000
          }
        }
      }
    },
    {
      "name": "numpy_mcp_numerical_operation",
      "description": "Do numerical operation like add, sub, mul, div, power, abs, exp, log, sqrt, sin, cos, tan, mean, median, std, var, min, max, argmin, argmax, percentile, dot, matmul, inv, det, eig, solve, svd",
      "inputSchema": {
        "type": "object",
        "required": [
          "operation"
        ],
        "properties": {
          "a": {
            "anyOf": [
              {
                "type": "array",
                "items": {}
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "A",
            "default": null
          },
          "b": {
            "anyOf": [
              {
                "type": "array",
                "items": {}
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "B",
            "default": null
          },
          "q": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Q",
            "default": null
          },
          "num": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Num",
            "default": null
          },
          "axis": {
            "type": "integer",
            "title": "Axis",
            "default": 0
          },
          "step": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Step",
            "default": 1
          },
          "stop": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stop",
            "default": null
          },
          "shape": {
            "anyOf": [
              {
                "type": "array",
                "items": {}
              },
              {
                "type": "null"
              }
            ],
            "title": "Shape",
            "default": null
          },
          "start": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start",
            "default": null
          },
          "new_shape": {
            "anyOf": [
              {
                "type": "array",
                "items": {}
              },
              {
                "type": "null"
              }
            ],
            "title": "New Shape",
            "default": null
          },
          "operation": {
            "type": "string",
            "title": "Operation"
          },
          "fill_value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fill Value",
            "default": null
          }
        }
      },
      "outputSchema": {
        "type": "object",
        "title": "_WrappedResult",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "anyOf": [
              {
                "type": "array",
                "items": {}
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "object",
                "additionalProperties": true
              }
            ],
            "title": "Result"
          }
        },
        "x-fastmcp-wrap-result": true
      }
    },
    {
      "name": "numpy_mcp_matlib_operation",
      "description": "Do matrix operations: rand-mat, zeros, ones, eye, identity, arange, linspace, reshape, flatten, concatenate, transpose, stack",
      "inputSchema": {
        "type": "object",
        "required": [
          "operation"
        ],
        "properties": {
          "k": {
            "type": "integer",
            "title": "K",
            "default": 0
          },
          "m": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "M",
            "default": null
          },
          "n": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "N",
            "default": null
          },
          "num": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Num",
            "default": null
          },
          "axis": {
            "type": "integer",
            "title": "Axis",
            "default": 0
          },
          "data": {
            "anyOf": [
              {
                "type": "array",
                "items": {}
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data",
            "default": null
          },
          "step": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Step",
            "default": null
          },
          "stop": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stop",
            "default": null
          },
          "shape": {
            "anyOf": [
              {
                "type": "array",
                "items": {}
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shape",
            "default": null
          },
          "start": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start",
            "default": null
          },
          "operation": {
            "type": "string",
            "title": "Operation"
          }
        }
      },
      "outputSchema": {
        "type": "object",
        "title": "_WrappedResult",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "array",
            "items": {},
            "title": "Result"
          }
        },
        "x-fastmcp-wrap-result": true
      }
    },
    {
      "name": "sympy_mcp_algebra_operation",
      "description": "Do algebraic operations like simplify, expand, factor, collect",
      "inputSchema": {
        "type": "object",
        "required": [
          "operation",
          "expr"
        ],
        "properties": {
          "log": {
            "type": "boolean",
            "title": "Log",
            "default": true
          },
          "mul": {
            "type": "boolean",
            "title": "Mul",
            "default": true
          },
          "deep": {
            "type": "boolean",
            "title": "Deep",
            "default": true
          },
          "expr": {
            "type": "string",
            "title": "Expr"
          },
          "frac": {
            "type": "boolean",
            "title": "Frac",
            "default": false
          },
          "sign": {
            "type": "boolean",
            "title": "Sign",
            "default": false
          },
          "syms": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Syms",
            "default": null
          },
          "basic": {
            "type": "boolean",
            "title": "Basic",
            "default": true
          },
          "exact": {
            "type": "boolean",
            "title": "Exact",
            "default": false
          },
          "ratio": {
            "type": "number",
            "title": "Ratio",
            "default": 1.7
          },
          "measure": {
            "title": "Measure",
            "default": null
          },
          "modulus": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modulus",
            "default": null
          },
          "evaluate": {
            "type": "boolean",
            "title": "Evaluate",
            "default": true
          },
          "rational": {
            "type": "boolean",
            "title": "Rational",
            "default": false
          },
          "operation": {
            "enum": [
              "simplify",
              "expand",
              "factor",
              "collect"
            ],
            "type": "string",
            "title": "Operation"
          },
          "power_exp": {
            "type": "boolean",
            "title": "Power Exp",
            "default": true
          },
          "power_base": {
            "type": "boolean",
            "title": "Power Base",
            "default": true
          },
          "multinomial": {
            "type": "boolean",
            "title": "Multinomial",
            "default": true
          }
        }
      },
      "outputSchema": {
        "type": "object",
        "title": "_WrappedResult",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "string",
            "title": "Result"
          }
        },
        "x-fastmcp-wrap-result": true
      }
    },
    {
      "name": "sympy_mcp_calculus_operation",
      "description": "Do calculus operations like diff, integrate, limit, series",
      "inputSchema": {
        "type": "object",
        "required": [
          "operation",
          "expr"
        ],
        "properties": {
          "n": {
            "type": "integer",
            "title": "N",
            "default": 1
          },
          "sym": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sym",
            "default": null
          },
          "expr": {
            "type": "string",
            "title": "Expr"
          },
          "lower": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lower",
            "default": null
          },
          "point": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Point",
            "default": 0
          },
          "upper": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Upper",
            "default": null
          },
          "series_n": {
            "type": "integer",
            "title": "Series N",
            "default": 6
          },
          "direction": {
            "enum": [
              "+",
              "-"
            ],
            "type": "string",
            "title": "Direction",
            "default": "+"
          },
          "operation": {
            "enum": [
              "diff",
              "integrate",
              "limit",
              "series"
            ],
            "type": "string",
            "title": "Operation"
          }
        }
      },
      "outputSchema": {
        "type": "object",
        "title": "_WrappedResult",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "string",
            "title": "Result"
          }
        },
        "x-fastmcp-wrap-result": true
      }
    },
    {
      "name": "sympy_mcp_equation_operation",
      "description": "Do symbolic equation operations like solve, solveset, linsolve, nonlinsolve",
      "inputSchema": {
        "type": "object",
        "required": [
          "operation",
          "equations"
        ],
        "properties": {
          "check": {
            "type": "boolean",
            "title": "Check",
            "default": true
          },
          "force": {
            "type": "boolean",
            "title": "Force",
            "default": false
          },
          "domain": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Domain",
            "default": null
          },
          "minimal": {
            "type": "boolean",
            "title": "Minimal",
            "default": false
          },
          "symbols": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Symbols",
            "default": null
          },
          "implicit": {
            "type": "boolean",
            "title": "Implicit",
            "default": false
          },
          "rational": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rational",
            "default": null
          },
          "simplify": {
            "type": "boolean",
            "title": "Simplify",
            "default": true
          },
          "equations": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "title": "Equations"
          },
          "operation": {
            "enum": [
              "solve",
              "solveset",
              "linsolve",
              "nonlinsolve"
            ],
            "type": "string",
            "title": "Operation"
          }
        }
      },
      "outputSchema": {
        "type": "object",
        "title": "_WrappedResult",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "string",
            "title": "Result"
          }
        },
        "x-fastmcp-wrap-result": true
      }
    },
    {
      "name": "sympy_mcp_matrix_operation",
      "description": "Do symbolic matrix operations like create, det, inv, rref, eigenvals",
      "inputSchema": {
        "type": "object",
        "required": [
          "operation",
          "data"
        ],
        "properties": {
          "data": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {}
              }
            ],
            "title": "Data"
          },
          "ncols": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ncols",
            "default": null
          },
          "nrows": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nrows",
            "default": null
          },
          "rational": {
            "type": "boolean",
            "title": "Rational",
            "default": true
          },
          "simplify": {
            "type": "boolean",
            "title": "Simplify",
            "default": true
          },
          "operation": {
            "enum": [
              "create",
              "det",
              "inv",
              "rref",
              "eigenvals"
            ],
            "type": "string",
            "title": "Operation"
          }
        }
      }
    }
  ],
  "connections": [
    {
      "type": "http",
      "deploymentUrl": "https://server.smithery.ai/@abhiphile/fermat-mcp/mcp",
      "configSchema": {
        "type": "object",
        "properties": {},
        "description": "No configuration needed for Fermat MCP server"
      }
    }
  ]
}