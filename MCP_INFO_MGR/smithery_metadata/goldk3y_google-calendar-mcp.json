{
  "qualifiedName": "@goldk3y/google-calendar-mcp",
  "displayName": "Google Calendar Integration Server",
  "description": "Enable seamless interaction with Google Calendar through a secure and comprehensive MCP server. Manage calendars and events with full support for OAuth2 authentication, event details, and search capabilities. Simplify calendar operations and event scheduling within your applications.",
  "iconUrl": "https://spjawbfpwezjfmicopsl.supabase.co/storage/v1/object/public/server-icons/b0570bf4-cae7-4d26-bffe-f892a887aa16.svg",
  "remote": true,
  "deploymentUrl": "https://server.smithery.ai/@goldk3y/google-calendar-mcp",
  "security": null,
  "tools": [
    {
      "name": "generate_oauth_url",
      "description": "Generate OAuth2 authorization URL for user to grant calendar access. User must visit this URL to authorize the application.",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [
              "https://www.googleapis.com/auth/calendar",
              "https://www.googleapis.com/auth/calendar.events"
            ],
            "description": "OAuth2 scopes to request (default: full calendar access)"
          },
          "access_type": {
            "enum": [
              "online",
              "offline"
            ],
            "type": "string",
            "default": "offline",
            "description": "Access type - 'offline' gets refresh token"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "exchange_auth_code",
      "description": "Exchange authorization code for access and refresh tokens. Use this after user has authorized via the OAuth URL.",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "auth_code"
        ],
        "properties": {
          "auth_code": {
            "type": "string",
            "description": "Authorization code received from OAuth redirect"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "check_auth_status",
      "description": "Check the current authentication status and token information",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {},
        "additionalProperties": false
      }
    },
    {
      "name": "list_calendars",
      "description": "List all calendars accessible to the authenticated user",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "show_hidden": {
            "type": "boolean",
            "default": false,
            "description": "Whether to show hidden calendars"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "get_calendar",
      "description": "Get detailed information about a specific calendar",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "calendar_id"
        ],
        "properties": {
          "calendar_id": {
            "type": "string",
            "description": "Calendar ID (use 'primary' for user's primary calendar)"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "create_calendar",
      "description": "Create a new calendar",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "summary"
        ],
        "properties": {
          "summary": {
            "type": "string",
            "description": "Calendar name/title"
          },
          "location": {
            "type": "string",
            "description": "Calendar location"
          },
          "timezone": {
            "type": "string",
            "description": "Calendar timezone (e.g., 'America/New_York')"
          },
          "description": {
            "type": "string",
            "description": "Calendar description"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "delete_calendar",
      "description": "Delete a calendar (WARNING: This will delete all events in the calendar)",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "calendar_id"
        ],
        "properties": {
          "calendar_id": {
            "type": "string",
            "description": "Calendar ID to delete (cannot delete primary calendar)"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "list_events",
      "description": "List events from a calendar within a specified time range",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "q": {
            "type": "string",
            "description": "Free text search terms"
          },
          "order_by": {
            "enum": [
              "startTime",
              "updated"
            ],
            "type": "string",
            "default": "startTime",
            "description": "How to order the events"
          },
          "time_max": {
            "type": "string",
            "description": "End time (ISO 8601 format, e.g., '2024-01-31T23:59:59Z')"
          },
          "time_min": {
            "type": "string",
            "description": "Start time (ISO 8601 format, e.g., '2024-01-01T00:00:00Z')"
          },
          "calendar_id": {
            "type": "string",
            "default": "primary",
            "description": "Calendar ID (use 'primary' for user's primary calendar)"
          },
          "max_results": {
            "type": "number",
            "default": 10,
            "description": "Maximum number of events to return (default: 10)"
          },
          "single_events": {
            "type": "boolean",
            "default": true,
            "description": "Whether to expand recurring events into individual occurrences"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "get_event",
      "description": "Get detailed information about a specific event",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "event_id"
        ],
        "properties": {
          "event_id": {
            "type": "string",
            "description": "Event ID to retrieve"
          },
          "calendar_id": {
            "type": "string",
            "default": "primary",
            "description": "Calendar ID containing the event"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "create_event",
      "description": "Create a new calendar event",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "summary",
          "start_time",
          "end_time"
        ],
        "properties": {
          "all_day": {
            "type": "boolean",
            "default": false,
            "description": "Whether this is an all-day event"
          },
          "summary": {
            "type": "string",
            "description": "Event title/summary"
          },
          "end_time": {
            "type": "string",
            "description": "End time (ISO 8601 format, e.g., '2024-01-15T11:00:00Z' or '2024-01-15' for all-day)"
          },
          "location": {
            "type": "string",
            "description": "Event location"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone for the event (e.g., 'America/New_York')"
          },
          "attendees": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of attendee email addresses"
          },
          "start_time": {
            "type": "string",
            "description": "Start time (ISO 8601 format, e.g., '2024-01-15T10:00:00Z' or '2024-01-15' for all-day)"
          },
          "calendar_id": {
            "type": "string",
            "default": "primary",
            "description": "Calendar ID where the event will be created"
          },
          "description": {
            "type": "string",
            "description": "Event description"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "update_event",
      "description": "Update an existing calendar event",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "event_id"
        ],
        "properties": {
          "status": {
            "enum": [
              "confirmed",
              "cancelled",
              "tentative"
            ],
            "type": "string",
            "description": "Event status"
          },
          "summary": {
            "type": "string",
            "description": "New event title/summary"
          },
          "end_time": {
            "type": "string",
            "description": "New end time (ISO 8601 format)"
          },
          "event_id": {
            "type": "string",
            "description": "Event ID to update"
          },
          "location": {
            "type": "string",
            "description": "New event location"
          },
          "start_time": {
            "type": "string",
            "description": "New start time (ISO 8601 format)"
          },
          "calendar_id": {
            "type": "string",
            "default": "primary",
            "description": "Calendar ID containing the event"
          },
          "description": {
            "type": "string",
            "description": "New event description"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "delete_event",
      "description": "Delete a calendar event",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "event_id"
        ],
        "properties": {
          "event_id": {
            "type": "string",
            "description": "Event ID to delete"
          },
          "calendar_id": {
            "type": "string",
            "default": "primary",
            "description": "Calendar ID containing the event"
          }
        },
        "additionalProperties": false
      }
    }
  ],
  "connections": [
    {
      "type": "http",
      "deploymentUrl": "https://server.smithery.ai/@goldk3y/google-calendar-mcp/mcp",
      "configSchema": {
        "type": "object",
        "title": "MCP Session Configuration",
        "required": [
          "clientId",
          "clientSecret"
        ],
        "properties": {
          "clientId": {
            "type": "string",
            "description": "Google OAuth2 Client ID from Google Cloud Console (APIs & Services > Credentials)"
          },
          "redirectUri": {
            "type": "string",
            "default": "http://localhost:3000/oauth2callback",
            "description": "OAuth2 redirect URI (must match the one configured in Google Cloud Console)"
          },
          "clientSecret": {
            "type": "string",
            "description": "Google OAuth2 Client Secret from Google Cloud Console"
          },
          "refreshToken": {
            "type": "string",
            "description": "Optional: Pre-existing refresh token for accessing user's calendar data"
          }
        },
        "description": "Schema for the /mcp endpoint configuration",
        "x-mcp-version": "1.0",
        "x-query-style": "dot+bracket",
        "additionalProperties": false
      }
    }
  ]
}