{
  "qualifiedName": "@GigaChatTester/github",
  "displayName": "GitHub Integration Server",
  "description": "Enable seamless interaction with GitHub repositories, issues, pull requests, and user data through a unified interface. Manage repository content, search code and users, and handle issues and pull requests efficiently. Streamline your GitHub workflows by integrating these capabilities directly into your applications.",
  "iconUrl": null,
  "remote": true,
  "deploymentUrl": "https://server.smithery.ai/@GigaChatTester/github",
  "security": null,
  "tools": [
    {
      "name": "search_repositories",
      "description": "Search for GitHub repositories. Returns a concise list with essential information. Use 'get_repository' for detailed information about a specific repository.",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "query"
        ],
        "properties": {
          "page": {
            "type": "number",
            "default": 1,
            "description": "Page number (default 1)"
          },
          "query": {
            "type": "string",
            "description": "Search query. Examples: 'language:typescript stars:>1000', 'org:facebook react', 'machine learning in:description', 'user:octocat', 'created:>2023-01-01', 'license:mit', 'topic:javascript', 'is:public archived:false'"
          },
          "per_page": {
            "type": "number",
            "default": 10,
            "description": "Results per page (default 10, max 100)"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "search_code",
      "description": "Search for code across GitHub repositories. Returns a concise list with file paths and repositories. Use 'get_file_contents' for full file content.",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "q"
        ],
        "properties": {
          "q": {
            "type": "string",
            "description": "Search query using GitHub code search syntax. Examples: 'addClass in:file language:js', 'repo:owner/name path:src/ extension:py', 'org:github extension:js', 'filename:test.py', 'user:octocat extension:rb', 'console.log path:/src/components', 'TODO in:comments'"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "Page number (default 1)"
          },
          "sort": {
            "enum": [
              "indexed"
            ],
            "type": "string",
            "description": "Sort field ('indexed' only)"
          },
          "order": {
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string",
            "description": "Sort order"
          },
          "per_page": {
            "type": "number",
            "default": 10,
            "description": "Results per page (default 10, max 100)"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "search_users",
      "description": "Search for GitHub users.",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "q"
        ],
        "properties": {
          "q": {
            "type": "string",
            "description": "Search query using GitHub users search syntax. Examples: 'location:\"San Francisco\" followers:>100', 'language:python repos:>50', 'fullname:\"John Doe\"', 'type:user', 'type:org', 'created:>2020-01-01', 'in:email example.com'"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "Page number (default 1)"
          },
          "sort": {
            "enum": [
              "followers",
              "repositories",
              "joined"
            ],
            "type": "string",
            "description": "Sort field by category"
          },
          "order": {
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string",
            "description": "Sort order"
          },
          "per_page": {
            "type": "number",
            "default": 10,
            "description": "Results per page (default 10, max 100)"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "get_issue",
      "description": "Get details of a specific issue in a GitHub repository.",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "owner",
          "repo",
          "issue_number"
        ],
        "properties": {
          "repo": {
            "type": "string",
            "description": "The name of the repository"
          },
          "owner": {
            "type": "string",
            "description": "The owner of the repository"
          },
          "issue_number": {
            "type": "number",
            "description": "The number of the issue"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "add_issue_comment",
      "description": "Add a comment to a specific issue in a GitHub repository.",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "owner",
          "repo",
          "issue_number",
          "body"
        ],
        "properties": {
          "body": {
            "type": "string",
            "description": "Comment content"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "issue_number": {
            "type": "number",
            "description": "Issue number to comment on"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "search_issues",
      "description": "Search for issues in GitHub repositories.",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "q"
        ],
        "properties": {
          "q": {
            "type": "string",
            "description": "Search query using GitHub issues search syntax"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "Page number (default 1)"
          },
          "sort": {
            "enum": [
              "comments",
              "reactions",
              "reactions-+1",
              "reactions--1",
              "reactions-smile",
              "reactions-thinking_face",
              "reactions-heart",
              "reactions-tada",
              "interactions",
              "created",
              "updated"
            ],
            "type": "string",
            "description": "Sort field by number of matches of categories, defaults to best match"
          },
          "order": {
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string",
            "description": "Sort order"
          },
          "per_page": {
            "type": "number",
            "default": 10,
            "description": "Results per page (default 10, max 100)"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "create_issue",
      "description": "Create a new issue in a GitHub repository.",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "owner",
          "repo",
          "title"
        ],
        "properties": {
          "body": {
            "type": "string",
            "description": "Issue body content"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "title": {
            "type": "string",
            "description": "Issue title"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Labels to apply to this issue"
          },
          "assignees": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Usernames to assign to this issue"
          },
          "milestone": {
            "type": "number",
            "description": "Milestone number"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "list_issues",
      "description": "List issues in a GitHub repository.",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "owner",
          "repo"
        ],
        "properties": {
          "page": {
            "type": "number",
            "default": 1,
            "description": "Page number (default 1)"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "sort": {
            "enum": [
              "created",
              "updated",
              "comments"
            ],
            "type": "string",
            "description": "Sort order"
          },
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "since": {
            "type": "string",
            "description": "Filter by date (ISO 8601 timestamp)"
          },
          "state": {
            "enum": [
              "open",
              "closed",
              "all"
            ],
            "type": "string",
            "description": "Filter by state"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Filter by labels"
          },
          "per_page": {
            "type": "number",
            "default": 10,
            "description": "Results per page (default 10, max 100)"
          },
          "direction": {
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string",
            "description": "Sort direction"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "update_issue",
      "description": "Update an existing issue in a GitHub repository.",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "owner",
          "repo",
          "issue_number"
        ],
        "properties": {
          "body": {
            "type": "string",
            "description": "New description"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "state": {
            "enum": [
              "open",
              "closed"
            ],
            "type": "string",
            "description": "New state"
          },
          "title": {
            "type": "string",
            "description": "New title"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "New labels"
          },
          "assignees": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "New assignees"
          },
          "milestone": {
            "type": "number",
            "description": "New milestone number"
          },
          "issue_number": {
            "type": "number",
            "description": "Issue number to update"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "get_issue_comments",
      "description": "Get comments for a specific issue in a GitHub repository.",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "owner",
          "repo",
          "issue_number"
        ],
        "properties": {
          "page": {
            "type": "number",
            "default": 1,
            "description": "Page number"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "per_page": {
            "type": "number",
            "default": 10,
            "description": "Number of records per page"
          },
          "issue_number": {
            "type": "number",
            "description": "Issue number"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "get_repository",
      "description": "Get detailed information about a GitHub repository including README and file structure",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "owner",
          "repo"
        ],
        "properties": {
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "owner": {
            "type": "string",
            "description": "Repository owner"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "get_commit",
      "description": "Get details for a commit from a GitHub repository",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "owner",
          "repo",
          "sha"
        ],
        "properties": {
          "sha": {
            "type": "string",
            "description": "Commit SHA, branch name, or tag name"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "owner": {
            "type": "string",
            "description": "Repository owner"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "list_commits",
      "description": "Get list of commits of a branch in a GitHub repository",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "owner",
          "repo"
        ],
        "properties": {
          "sha": {
            "type": "string",
            "description": "SHA or Branch name"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "Page number (default 1)"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "per_page": {
            "type": "number",
            "default": 10,
            "description": "Results per page (default 10, max 100)"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "list_branches",
      "description": "List branches in a GitHub repository",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "owner",
          "repo"
        ],
        "properties": {
          "page": {
            "type": "number",
            "default": 1,
            "description": "Page number (default 1)"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "per_page": {
            "type": "number",
            "default": 10,
            "description": "Results per page (default 10, max 100)"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "create_or_update_file",
      "description": "Create or update a single file in a GitHub repository. If updating an existing file, you must provide the current SHA of the file (the full 40-character SHA, not a shortened version).",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "owner",
          "repo",
          "path",
          "content",
          "message",
          "branch"
        ],
        "properties": {
          "sha": {
            "type": "string",
            "description": "Full SHA of the current file blob (required for updates, must be the complete 40-character SHA)"
          },
          "path": {
            "type": "string",
            "description": "Path where to create/update the file"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "owner": {
            "type": "string",
            "description": "Repository owner (username or organization)"
          },
          "branch": {
            "type": "string",
            "description": "Branch to create/update the file in"
          },
          "content": {
            "type": "string",
            "description": "Content of the file"
          },
          "message": {
            "type": "string",
            "description": "Commit message"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "create_repository",
      "description": "Create a new GitHub repository in your account",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Repository name"
          },
          "private": {
            "type": "boolean",
            "description": "Whether repo should be private"
          },
          "autoInit": {
            "type": "boolean",
            "description": "Initialize with README"
          },
          "description": {
            "type": "string",
            "description": "Repository description"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "get_file_contents",
      "description": "Get the contents of a file from a GitHub repository",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "owner",
          "repo",
          "path"
        ],
        "properties": {
          "mode": {
            "enum": [
              "overview",
              "full"
            ],
            "type": "string",
            "default": "overview",
            "description": "Mode: 'overview' for truncated preview, 'full' for complete file"
          },
          "path": {
            "type": "string",
            "description": "Path to file"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "owner": {
            "type": "string",
            "description": "Repository owner (username or organization)"
          },
          "branch": {
            "type": "string",
            "description": "Branch to get contents from (defaults to default branch)"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "fork_repository",
      "description": "Fork a GitHub repository to your account or specified organization",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "owner",
          "repo"
        ],
        "properties": {
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "organization": {
            "type": "string",
            "description": "Organization to fork to"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "create_branch",
      "description": "Create a new branch in a GitHub repository",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "owner",
          "repo",
          "branch"
        ],
        "properties": {
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "branch": {
            "type": "string",
            "description": "Name for new branch"
          },
          "from_branch": {
            "type": "string",
            "description": "Source branch (defaults to repo default)"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "list_tags",
      "description": "List git tags in a GitHub repository",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "owner",
          "repo"
        ],
        "properties": {
          "page": {
            "type": "number",
            "default": 1,
            "description": "Page number (default 1)"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "per_page": {
            "type": "number",
            "default": 10,
            "description": "Results per page (default 10, max 100)"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "get_tag",
      "description": "Get details about a specific git tag in a GitHub repository",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "owner",
          "repo",
          "tag"
        ],
        "properties": {
          "tag": {
            "type": "string",
            "description": "Tag name"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "owner": {
            "type": "string",
            "description": "Repository owner"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "push_files",
      "description": "Push multiple files to a GitHub repository in a single commit",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "owner",
          "repo",
          "branch",
          "files",
          "message"
        ],
        "properties": {
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "files": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "path",
                "content"
              ],
              "properties": {
                "path": {
                  "type": "string"
                },
                "content": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "description": "Array of file objects to push, each object with path (string) and content (string)"
          },
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "branch": {
            "type": "string",
            "description": "Branch to push to"
          },
          "message": {
            "type": "string",
            "description": "Commit message"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "get_pull_request",
      "description": "Get details of a specific pull request in a GitHub repository.",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "owner",
          "repo",
          "pullNumber"
        ],
        "properties": {
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "pullNumber": {
            "type": "number",
            "description": "Pull request number"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "update_pull_request",
      "description": "Update an existing pull request in a GitHub repository.",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "owner",
          "repo",
          "pullNumber"
        ],
        "properties": {
          "base": {
            "type": "string",
            "description": "New base branch name"
          },
          "body": {
            "type": "string",
            "description": "New description"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "state": {
            "enum": [
              "open",
              "closed"
            ],
            "type": "string",
            "description": "New state"
          },
          "title": {
            "type": "string",
            "description": "New title"
          },
          "pullNumber": {
            "type": "number",
            "description": "Pull request number to update"
          },
          "maintainer_can_modify": {
            "type": "boolean",
            "description": "Allow maintainer edits"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "list_pull_requests",
      "description": "List pull requests in a GitHub repository.",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "owner",
          "repo"
        ],
        "properties": {
          "base": {
            "type": "string",
            "description": "Filter by base branch"
          },
          "head": {
            "type": "string",
            "description": "Filter by head user/org and branch"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "Page number (default 1)"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "sort": {
            "enum": [
              "created",
              "updated",
              "popularity",
              "long-running"
            ],
            "type": "string",
            "description": "Sort by"
          },
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "state": {
            "enum": [
              "open",
              "closed",
              "all"
            ],
            "type": "string",
            "description": "Filter by state"
          },
          "per_page": {
            "type": "number",
            "default": 10,
            "description": "Results per page (default 10, max 100)"
          },
          "direction": {
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string",
            "description": "Sort direction"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "merge_pull_request",
      "description": "Merge a pull request in a GitHub repository.",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "owner",
          "repo",
          "pullNumber"
        ],
        "properties": {
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "pullNumber": {
            "type": "number",
            "description": "Pull request number"
          },
          "commit_title": {
            "type": "string",
            "description": "Title for merge commit"
          },
          "merge_method": {
            "enum": [
              "merge",
              "squash",
              "rebase"
            ],
            "type": "string",
            "description": "Merge method"
          },
          "commit_message": {
            "type": "string",
            "description": "Extra detail for merge commit"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "get_pull_request_files",
      "description": "Get the files changed in a specific pull request.",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "owner",
          "repo",
          "pullNumber"
        ],
        "properties": {
          "page": {
            "type": "number",
            "default": 1,
            "description": "Page number (default 1)"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "per_page": {
            "type": "number",
            "default": 10,
            "description": "Results per page (default 10, max 100)"
          },
          "pullNumber": {
            "type": "number",
            "description": "Pull request number"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "get_pull_request_status",
      "description": "Get the status of a specific pull request.",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "owner",
          "repo",
          "pullNumber"
        ],
        "properties": {
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "pullNumber": {
            "type": "number",
            "description": "Pull request number"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "update_pull_request_branch",
      "description": "Update the branch of a pull request with the latest changes from the base branch (not implemented)",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "owner",
          "repo",
          "pullNumber"
        ],
        "properties": {
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "pullNumber": {
            "type": "number",
            "description": "Pull request number"
          },
          "expectedHeadSha": {
            "type": "string",
            "description": "The expected SHA of the pull request's HEAD ref"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "get_pull_request_comments",
      "description": "Get comments for a specific pull request",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "owner",
          "repo",
          "pullNumber"
        ],
        "properties": {
          "page": {
            "type": "number",
            "default": 1,
            "description": "Page number (default 1)"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "per_page": {
            "type": "number",
            "default": 10,
            "description": "Results per page (default 10, max 100)"
          },
          "pullNumber": {
            "type": "number",
            "description": "Pull request number"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "create_pull_request",
      "description": "Create a new pull request in a GitHub repository.",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "owner",
          "repo",
          "title",
          "head",
          "base"
        ],
        "properties": {
          "base": {
            "type": "string",
            "description": "Branch to merge into"
          },
          "body": {
            "type": "string",
            "description": "PR description"
          },
          "head": {
            "type": "string",
            "description": "Branch containing changes"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "draft": {
            "type": "boolean",
            "description": "Create as draft PR"
          },
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "title": {
            "type": "string",
            "description": "PR title"
          },
          "maintainer_can_modify": {
            "type": "boolean",
            "description": "Allow maintainer edits"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "get_pull_request_review_comments",
      "description": "Get review comments (line-by-line code comments) for a specific pull request.",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "owner",
          "repo",
          "pullNumber"
        ],
        "properties": {
          "page": {
            "type": "number",
            "default": 1,
            "description": "Page number (default 1)"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "sort": {
            "enum": [
              "created",
              "updated"
            ],
            "type": "string",
            "description": "Sort comments by created or updated time"
          },
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "since": {
            "type": "string",
            "description": "Only show comments updated after this time (ISO 8601 format)"
          },
          "per_page": {
            "type": "number",
            "default": 10,
            "description": "Results per page (default 10, max 100)"
          },
          "direction": {
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string",
            "description": "Sort direction"
          },
          "pullNumber": {
            "type": "number",
            "description": "Pull request number"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "name": "create_pull_request_review_comment",
      "description": "Create a review comment (line-by-line code comment) on a pull request.",
      "inputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": [
          "owner",
          "repo",
          "pullNumber",
          "body",
          "commit_id",
          "path"
        ],
        "properties": {
          "body": {
            "type": "string",
            "description": "Comment body"
          },
          "line": {
            "type": "number",
            "description": "Line number for single-line comment"
          },
          "path": {
            "type": "string",
            "description": "Relative path to the file being commented on"
          },
          "repo": {
            "type": "string",
            "description": "Repository name"
          },
          "side": {
            "enum": [
              "LEFT",
              "RIGHT"
            ],
            "type": "string",
            "default": "RIGHT",
            "description": "Side of diff (LEFT for deletion, RIGHT for addition)"
          },
          "owner": {
            "type": "string",
            "description": "Repository owner"
          },
          "commit_id": {
            "type": "string",
            "description": "SHA of the commit to comment on"
          },
          "pullNumber": {
            "type": "number",
            "description": "Pull request number"
          },
          "start_line": {
            "type": "number",
            "description": "Start line for multi-line comment"
          },
          "start_side": {
            "enum": [
              "LEFT",
              "RIGHT"
            ],
            "type": "string",
            "description": "Start side for multi-line comment"
          },
          "in_reply_to": {
            "type": "number",
            "description": "ID of review comment to reply to"
          }
        },
        "additionalProperties": false
      }
    }
  ],
  "connections": [
    {
      "type": "http",
      "deploymentUrl": "https://server.smithery.ai/@GigaChatTester/github/mcp",
      "configSchema": {
        "type": "object",
        "required": [
          "githubPersonalAccessToken"
        ],
        "properties": {
          "githubPersonalAccessToken": {
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    }
  ]
}