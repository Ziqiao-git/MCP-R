{
  "qualifiedName": "@windalfin/clickup-mcp-server",
  "displayName": "ClickUp MCP Server",
  "description": "Integrate ClickUp tasks with AI applications to streamline your project management. Interact with tasks, lists, and folders using natural language for efficient task handling. Enhance your productivity by automating workflows and managing tasks seamlessly within your ClickUp workspace.",
  "iconUrl": "https://icons.duckduckgo.com/ip3/github.com.ico",
  "remote": false,
  "deploymentUrl": null,
  "security": {
    "scanPassed": true
  },
  "tools": [
    {
      "name": "get_workspace_hierarchy",
      "description": "Get the complete workspace hierarchy including spaces, folders, and lists.",
      "inputSchema": {
        "type": "object",
        "properties": {}
      }
    },
    {
      "name": "create_task",
      "description": "Create a single task in a ClickUp list. Use this tool for individual task creation only. For multiple tasks, use create_bulk_tasks instead. Before calling this tool, check if you already have the necessary list ID from previous responses in the conversation history, as this avoids redundant lookups. When creating a task, you must provide either a listId or listName.",
      "inputSchema": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the task. Put a relevant emoji followed by a blank space before the name."
          },
          "listId": {
            "type": "string",
            "description": "ID of the list to create the task in (optional if using listName instead). If you have this ID from a previous response, use it directly rather than looking up by name."
          },
          "status": {
            "type": "string",
            "description": "OPTIONAL: Override the default ClickUp status. In most cases, you should omit this to use ClickUp defaults"
          },
          "dueDate": {
            "type": "string",
            "description": "Due date of the task (Unix timestamp in milliseconds). Convert dates to this format before submitting."
          },
          "listName": {
            "type": "string",
            "description": "Name of the list to create the task in - will automatically find the list by name (optional if using listId instead). Only use this if you don't already have the list ID from previous responses."
          },
          "priority": {
            "type": "number",
            "description": "Priority of the task (1-4), where 1 is urgent/highest priority and 4 is lowest priority. Only set this when the user explicitly requests a priority level."
          },
          "description": {
            "type": "string",
            "description": "Plain text description for the task"
          },
          "markdown_description": {
            "type": "string",
            "description": "Markdown formatted description for the task. If provided, this takes precedence over description"
          }
        }
      }
    },
    {
      "name": "get_task",
      "description": "Retrieve detailed information about a specific task. Valid parameter combinations:\n1. Use taskId alone (preferred)\n2. Use taskName + optional listName (to disambiguate if multiple tasks have the same name)",
      "inputSchema": {
        "type": "object",
        "required": [],
        "properties": {
          "taskId": {
            "type": "string",
            "description": "ID of task to retrieve (preferred). Use this instead of taskName if you have it."
          },
          "listName": {
            "type": "string",
            "description": "Name of list containing the task. Helps find the right task when using taskName."
          },
          "taskName": {
            "type": "string",
            "description": "Name of task to retrieve. Warning: Task names may not be unique."
          }
        }
      }
    },
    {
      "name": "get_tasks",
      "description": "Retrieve tasks from a list with optional filtering. You MUST provide either:\n1. listId (preferred)\n2. listName\n\nUse filters to narrow down results by status, dates, etc.",
      "inputSchema": {
        "type": "object",
        "required": [],
        "properties": {
          "page": {
            "type": "number",
            "description": "Page number for pagination (starts at 0)"
          },
          "listId": {
            "type": "string",
            "description": "ID of list to get tasks from (preferred). Use this instead of listName if you have it."
          },
          "reverse": {
            "type": "boolean",
            "description": "Reverse sort order (descending)"
          },
          "archived": {
            "type": "boolean",
            "description": "Include archived tasks"
          },
          "listName": {
            "type": "string",
            "description": "Name of list to get tasks from. Only use if you don't have listId."
          },
          "order_by": {
            "type": "string",
            "description": "Sort field: due_date, created, updated"
          },
          "statuses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Filter by status names (e.g. ['To Do', 'In Progress'])"
          },
          "subtasks": {
            "type": "boolean",
            "description": "Include subtasks"
          }
        }
      }
    },
    {
      "name": "update_task",
      "description": "Modify an existing task's properties. Valid parameter combinations:\n1. Use taskId alone (preferred if you have it)\n2. Use taskName + optional listName (to disambiguate if multiple tasks have the same name)\n\nAt least one update field (name, description, status, priority) must be provided. Only specified fields will be updated.",
      "inputSchema": {
        "type": "object",
        "required": [],
        "properties": {
          "name": {
            "type": "string",
            "description": "New name for the task. Include emoji prefix if appropriate."
          },
          "status": {
            "type": "string",
            "description": "New status. Must be valid for the task's current list."
          },
          "taskId": {
            "type": "string",
            "description": "ID of the task to update (preferred). Use this instead of taskName if you have it from a previous response."
          },
          "dueDate": {
            "type": "string",
            "description": "New due date (Unix timestamp in milliseconds)"
          },
          "listName": {
            "type": "string",
            "description": "Name of the list containing the task. Required when using taskName if multiple tasks have the same name."
          },
          "priority": {
            "enum": [
              1,
              2,
              3,
              4,
              null
            ],
            "type": [
              "number",
              "null"
            ],
            "description": "New priority: 1 (urgent) to 4 (low). Set null to clear priority."
          },
          "taskName": {
            "type": "string",
            "description": "Name of the task to update. Only use this if you don't have taskId. Warning: Task names may not be unique."
          },
          "description": {
            "type": "string",
            "description": "New plain text description. Will be ignored if markdown_description is provided."
          },
          "markdown_description": {
            "type": "string",
            "description": "New markdown description. Takes precedence over plain text description."
          }
        }
      }
    },
    {
      "name": "move_task",
      "description": "Move a task to a different list. Valid parameter combinations:\n1. Use taskId + (listId or listName) - preferred\n2. Use taskName + sourceListName + (listId or listName)\n\nWARNING: Task statuses may reset if destination list has different status options.",
      "inputSchema": {
        "type": "object",
        "required": [],
        "properties": {
          "listId": {
            "type": "string",
            "description": "ID of destination list (preferred). Use this instead of listName if you have it."
          },
          "taskId": {
            "type": "string",
            "description": "ID of the task to move (preferred). Use this instead of taskName if you have it."
          },
          "listName": {
            "type": "string",
            "description": "Name of destination list. Only use if you don't have listId."
          },
          "taskName": {
            "type": "string",
            "description": "Name of the task to move. When using this, you MUST also provide sourceListName."
          },
          "sourceListName": {
            "type": "string",
            "description": "REQUIRED with taskName: Current list containing the task."
          }
        }
      }
    },
    {
      "name": "duplicate_task",
      "description": "Create a copy of a task in the same or different list. Valid parameter combinations:\n1. Use taskId + optional (listId or listName) - preferred\n2. Use taskName + sourceListName + optional (listId or listName)\n\nThe duplicate preserves the original task's properties.",
      "inputSchema": {
        "type": "object",
        "required": [],
        "properties": {
          "listId": {
            "type": "string",
            "description": "ID of list for the duplicate (optional). Defaults to same list as original."
          },
          "taskId": {
            "type": "string",
            "description": "ID of task to duplicate (preferred). Use this instead of taskName if you have it."
          },
          "listName": {
            "type": "string",
            "description": "Name of list for the duplicate. Only use if you don't have listId."
          },
          "taskName": {
            "type": "string",
            "description": "Name of task to duplicate. When using this, you MUST provide sourceListName."
          },
          "sourceListName": {
            "type": "string",
            "description": "REQUIRED with taskName: List containing the original task."
          }
        }
      }
    },
    {
      "name": "delete_task",
      "description": "⚠️ PERMANENTLY DELETE a task. This action cannot be undone. Valid parameter combinations:\n1. Use taskId alone (preferred and safest)\n2. Use taskName + optional listName (use with caution)",
      "inputSchema": {
        "type": "object",
        "properties": {
          "taskId": {
            "type": "string",
            "description": "ID of task to delete (preferred). Use this instead of taskName for safety."
          },
          "listName": {
            "type": "string",
            "description": "Name of list containing the task. Helps ensure correct task deletion when using taskName."
          },
          "taskName": {
            "type": "string",
            "description": "Name of task to delete. Use with extreme caution as names may not be unique."
          }
        }
      }
    },
    {
      "name": "create_bulk_tasks",
      "description": "Create multiple tasks in a list efficiently. You MUST provide:\n1. An array of tasks with required properties\n2. Either listId or listName to specify the target list\n\nOptional: Configure batch size and concurrency for performance.",
      "inputSchema": {
        "type": "object",
        "required": [
          "tasks"
        ],
        "properties": {
          "tasks": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Task name with emoji prefix"
                },
                "status": {
                  "type": "string",
                  "description": "Task status (uses list default if omitted)"
                },
                "dueDate": {
                  "type": "string",
                  "description": "Due date (Unix timestamp ms)"
                },
                "priority": {
                  "type": "number",
                  "description": "Priority 1-4 (1=urgent, 4=low)"
                },
                "description": {
                  "type": "string",
                  "description": "Plain text description"
                },
                "markdown_description": {
                  "type": "string",
                  "description": "Markdown description (overrides plain text)"
                }
              }
            },
            "description": "Array of tasks to create. Each task must have at least a name."
          },
          "listId": {
            "type": "string",
            "description": "ID of list for new tasks (preferred). Use this instead of listName if you have it."
          },
          "options": {
            "type": "object",
            "properties": {
              "batchSize": {
                "type": "number",
                "description": "Tasks per batch (default: 10)"
              },
              "retryCount": {
                "type": "number",
                "description": "Retry attempts for failures"
              },
              "concurrency": {
                "type": "number",
                "description": "Parallel operations (default: 1)"
              },
              "continueOnError": {
                "type": "boolean",
                "description": "Continue if some tasks fail"
              }
            },
            "description": "Optional processing settings"
          },
          "listName": {
            "type": "string",
            "description": "Name of list for new tasks. Only use if you don't have listId."
          }
        }
      }
    },
    {
      "name": "update_bulk_tasks",
      "description": "Update multiple tasks efficiently. For each task, you MUST provide either:\n1. taskId alone (preferred)\n2. taskName + listName\n\nOnly specified fields will be updated for each task.",
      "inputSchema": {
        "type": "object",
        "required": [
          "tasks"
        ],
        "properties": {
          "tasks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "New name with emoji prefix"
                },
                "status": {
                  "type": "string",
                  "description": "New status"
                },
                "taskId": {
                  "type": "string",
                  "description": "Task ID (preferred). Use instead of taskName if available."
                },
                "dueDate": {
                  "type": "string",
                  "description": "New due date (Unix timestamp in milliseconds)"
                },
                "listName": {
                  "type": "string",
                  "description": "REQUIRED with taskName: List containing the task."
                },
                "priority": {
                  "enum": [
                    1,
                    2,
                    3,
                    4,
                    null
                  ],
                  "type": [
                    "number",
                    "null"
                  ],
                  "description": "New priority (1-4 or null)"
                },
                "taskName": {
                  "type": "string",
                  "description": "Task name. Requires listName when used."
                },
                "description": {
                  "type": "string",
                  "description": "New plain text description"
                },
                "markdown_description": {
                  "type": "string",
                  "description": "New markdown description"
                }
              }
            },
            "description": "Array of tasks to update"
          }
        }
      }
    },
    {
      "name": "move_bulk_tasks",
      "description": "Move multiple tasks to a different list efficiently. For each task, you MUST provide either:\n1. taskId alone (preferred)\n2. taskName + listName\n\nWARNING: Task statuses may reset if target list has different status options.",
      "inputSchema": {
        "type": "object",
        "required": [
          "tasks"
        ],
        "properties": {
          "tasks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "taskId": {
                  "type": "string",
                  "description": "Task ID (preferred). Use instead of taskName if available."
                },
                "listName": {
                  "type": "string",
                  "description": "REQUIRED with taskName: List containing the task."
                },
                "taskName": {
                  "type": "string",
                  "description": "Task name. Requires listName when used."
                }
              }
            },
            "description": "Array of tasks to move"
          },
          "targetListId": {
            "type": "string",
            "description": "ID of destination list (preferred). Use instead of targetListName if available."
          },
          "targetListName": {
            "type": "string",
            "description": "Name of destination list. Only use if you don't have targetListId."
          }
        }
      }
    },
    {
      "name": "delete_bulk_tasks",
      "description": "⚠️ PERMANENTLY DELETE multiple tasks. This action cannot be undone. For each task, you MUST provide either:\n1. taskId alone (preferred and safest)\n2. taskName + listName (use with caution)",
      "inputSchema": {
        "type": "object",
        "required": [
          "tasks"
        ],
        "properties": {
          "tasks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "taskId": {
                  "type": "string",
                  "description": "Task ID (preferred). Use instead of taskName if available."
                },
                "listName": {
                  "type": "string",
                  "description": "REQUIRED with taskName: List containing the task."
                },
                "taskName": {
                  "type": "string",
                  "description": "Task name. Requires listName when used."
                }
              }
            },
            "description": "Array of tasks to delete"
          }
        }
      }
    },
    {
      "name": "create_list",
      "description": "Create a new list directly in a ClickUp space (not in a folder). You MUST provide either spaceId or spaceName. For creating lists inside folders, use create_list_in_folder instead.",
      "inputSchema": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the list"
          },
          "status": {
            "type": "string",
            "description": "Status of the list"
          },
          "content": {
            "type": "string",
            "description": "Description or content of the list"
          },
          "dueDate": {
            "type": "string",
            "description": "Due date for the list (Unix timestamp in milliseconds)"
          },
          "spaceId": {
            "type": "string",
            "description": "ID of the space to create the list in. Use this instead of spaceName if you have the ID."
          },
          "assignee": {
            "type": "number",
            "description": "User ID to assign the list to"
          },
          "priority": {
            "type": "number",
            "description": "Priority level: 1 (urgent), 2 (high), 3 (normal), 4 (low)"
          },
          "spaceName": {
            "type": "string",
            "description": "Name of the space to create the list in. Alternative to spaceId - one of them MUST be provided."
          }
        }
      }
    },
    {
      "name": "create_list_in_folder",
      "description": "Create a new list within a ClickUp folder. You MUST provide either: 1) folderId alone, or 2) folderName WITH either spaceName or spaceId. Folder names may not be unique across spaces, which is why space information is required when using folderName.",
      "inputSchema": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the list"
          },
          "status": {
            "type": "string",
            "description": "Status of the list (uses folder default if not specified)"
          },
          "content": {
            "type": "string",
            "description": "Description or content of the list"
          },
          "spaceId": {
            "type": "string",
            "description": "ID of the space containing the folder. Required when using folderName instead of folderId."
          },
          "folderId": {
            "type": "string",
            "description": "ID of the folder to create the list in. If you have this, you don't need folderName or space information."
          },
          "spaceName": {
            "type": "string",
            "description": "Name of the space containing the folder. Required when using folderName instead of folderId."
          },
          "folderName": {
            "type": "string",
            "description": "Name of the folder to create the list in. When using this, you MUST also provide either spaceName or spaceId."
          }
        }
      }
    },
    {
      "name": "get_list",
      "description": "Retrieve details about a specific ClickUp list. You MUST provide either listId or listName. Using listId is more reliable as list names might not be unique.",
      "inputSchema": {
        "type": "object",
        "required": [],
        "properties": {
          "listId": {
            "type": "string",
            "description": "ID of the list to retrieve. Use this instead of listName if you have the ID."
          },
          "listName": {
            "type": "string",
            "description": "Name of the list to retrieve. May be ambiguous if multiple lists have the same name."
          }
        }
      }
    },
    {
      "name": "update_list",
      "description": "Update an existing ClickUp list's properties. You MUST provide either listId or listName, and at least one field to update (name, content, or status).",
      "inputSchema": {
        "type": "object",
        "required": [],
        "properties": {
          "name": {
            "type": "string",
            "description": "New name for the list"
          },
          "listId": {
            "type": "string",
            "description": "ID of the list to update. Use this instead of listName if you have the ID."
          },
          "status": {
            "type": "string",
            "description": "New status for the list"
          },
          "content": {
            "type": "string",
            "description": "New description or content for the list"
          },
          "listName": {
            "type": "string",
            "description": "Name of the list to update. May be ambiguous if multiple lists have the same name."
          }
        }
      }
    },
    {
      "name": "delete_list",
      "description": "Permanently delete a ClickUp list and all its tasks. You MUST provide either listId or listName. WARNING: This action cannot be undone.",
      "inputSchema": {
        "type": "object",
        "required": [],
        "properties": {
          "listId": {
            "type": "string",
            "description": "ID of the list to delete. Use this instead of listName if you have the ID."
          },
          "listName": {
            "type": "string",
            "description": "Name of the list to delete. May be ambiguous if multiple lists have the same name."
          }
        }
      }
    },
    {
      "name": "create_folder",
      "description": "Create a new folder in a ClickUp space for organizing related lists. You MUST provide:\n1. A folder name\n2. Either spaceId (preferred) or spaceName\n\nAfter creating a folder, you can add lists to it using create_list_in_folder.",
      "inputSchema": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the folder"
          },
          "spaceId": {
            "type": "string",
            "description": "ID of the space to create the folder in (preferred). Use this instead of spaceName if you have it."
          },
          "spaceName": {
            "type": "string",
            "description": "Name of the space to create the folder in. Only use if you don't have spaceId."
          },
          "override_statuses": {
            "type": "boolean",
            "description": "Whether to override space statuses with folder-specific statuses"
          }
        }
      }
    },
    {
      "name": "get_folder",
      "description": "Retrieve details about a specific folder including name, status, and metadata. Valid parameter combinations:\n1. Use folderId alone (preferred)\n2. Use folderName + (spaceId or spaceName)\n\nHelps you understand folder structure before creating or updating lists.",
      "inputSchema": {
        "type": "object",
        "required": [],
        "properties": {
          "spaceId": {
            "type": "string",
            "description": "ID of space containing the folder (required with folderName). Use this instead of spaceName if you have it."
          },
          "folderId": {
            "type": "string",
            "description": "ID of folder to retrieve (preferred). Use this instead of folderName if you have it."
          },
          "spaceName": {
            "type": "string",
            "description": "Name of space containing the folder (required with folderName). Only use if you don't have spaceId."
          },
          "folderName": {
            "type": "string",
            "description": "Name of folder to retrieve. When using this, you MUST also provide spaceId or spaceName."
          }
        }
      }
    },
    {
      "name": "update_folder",
      "description": "Modify an existing folder's properties. Valid parameter combinations:\n1. Use folderId alone (preferred)\n2. Use folderName + (spaceId or spaceName)\n\nAt least one update field (name or override_statuses) must be provided.",
      "inputSchema": {
        "type": "object",
        "required": [],
        "properties": {
          "name": {
            "type": "string",
            "description": "New name for the folder"
          },
          "spaceId": {
            "type": "string",
            "description": "ID of space containing the folder (required with folderName). Use this instead of spaceName if you have it."
          },
          "folderId": {
            "type": "string",
            "description": "ID of folder to update (preferred). Use this instead of folderName if you have it."
          },
          "spaceName": {
            "type": "string",
            "description": "Name of space containing the folder (required with folderName). Only use if you don't have spaceId."
          },
          "folderName": {
            "type": "string",
            "description": "Name of folder to update. When using this, you MUST also provide spaceId or spaceName."
          },
          "override_statuses": {
            "type": "boolean",
            "description": "Whether to override space statuses with folder-specific statuses"
          }
        }
      }
    },
    {
      "name": "delete_folder",
      "description": "⚠️ PERMANENTLY DELETE a folder and all its contents. This action cannot be undone. Valid parameter combinations:\n1. Use folderId alone (preferred and safest)\n2. Use folderName + (spaceId or spaceName)\n\nWARNING: This will also delete all lists and tasks within the folder.",
      "inputSchema": {
        "type": "object",
        "required": [],
        "properties": {
          "spaceId": {
            "type": "string",
            "description": "ID of space containing the folder (required with folderName). Use this instead of spaceName if you have it."
          },
          "folderId": {
            "type": "string",
            "description": "ID of folder to delete (preferred). Use this instead of folderName for safety."
          },
          "spaceName": {
            "type": "string",
            "description": "Name of space containing the folder (required with folderName). Only use if you don't have spaceId."
          },
          "folderName": {
            "type": "string",
            "description": "Name of folder to delete. When using this, you MUST also provide spaceId or spaceName."
          }
        }
      }
    }
  ],
  "connections": [
    {
      "type": "stdio",
      "bundleUrl": "https://backend.smithery.ai/storage/v1/object/public/bundles/@windalfin/clickup-mcp-server/server.mcpb",
      "runtime": "node",
      "configSchema": {
        "type": "object",
        "required": [
          "clickupApiKey",
          "clickupTeamId"
        ],
        "properties": {
          "clickupApiKey": {
            "type": "string",
            "description": "Your ClickUp API key."
          },
          "clickupTeamId": {
            "type": "string",
            "description": "Your ClickUp Team ID."
          }
        }
      }
    }
  ]
}